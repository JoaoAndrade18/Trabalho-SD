/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.9.1 */

#ifndef PB_SMARTCITY_DEVICES_SMART_CITY_ESP8266_PB_H_INCLUDED
#define PB_SMARTCITY_DEVICES_SMART_CITY_ESP8266_PB_H_INCLUDED
#include "pb.h"

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

/* Enum definitions */
/* Enumerações */
typedef enum _smartcity_devices_DeviceType {
    smartcity_devices_DeviceType_UNKNOWN_DEVICE = 0,
    smartcity_devices_DeviceType_TEMPERATURE_SENSOR = 5
} smartcity_devices_DeviceType;

typedef enum _smartcity_devices_DeviceStatus {
    smartcity_devices_DeviceStatus_UNKNOWN_STATUS = 0,
    smartcity_devices_DeviceStatus_ACTIVE = 4
} smartcity_devices_DeviceStatus;

/* Struct definitions */
/* Mensagem para dados de temperatura e umidade */
typedef struct _smartcity_devices_TemperatureHumidityData {
    double temperature;
    double humidity;
} smartcity_devices_TemperatureHumidityData;

/* Mensagem para atualizações de dispositivo */
typedef struct _smartcity_devices_DeviceUpdate {
    pb_callback_t device_id;
    smartcity_devices_DeviceType type;
    smartcity_devices_DeviceStatus current_status;
    bool has_temperature_humidity;
    smartcity_devices_TemperatureHumidityData temperature_humidity;
} smartcity_devices_DeviceUpdate;

/* Mensagem para informações do dispositivo */
typedef struct _smartcity_devices_DeviceInfo {
    pb_callback_t device_id;
    smartcity_devices_DeviceType type;
    pb_callback_t ip_address;
    int32_t port;
    smartcity_devices_DeviceStatus initial_state;
    bool is_actuator;
    bool is_sensor;
} smartcity_devices_DeviceInfo;


#ifdef __cplusplus
extern "C" {
#endif

/* Helper constants for enums */
#define _smartcity_devices_DeviceType_MIN smartcity_devices_DeviceType_UNKNOWN_DEVICE
#define _smartcity_devices_DeviceType_MAX smartcity_devices_DeviceType_TEMPERATURE_SENSOR
#define _smartcity_devices_DeviceType_ARRAYSIZE ((smartcity_devices_DeviceType)(smartcity_devices_DeviceType_TEMPERATURE_SENSOR+1))

#define _smartcity_devices_DeviceStatus_MIN smartcity_devices_DeviceStatus_UNKNOWN_STATUS
#define _smartcity_devices_DeviceStatus_MAX smartcity_devices_DeviceStatus_ACTIVE
#define _smartcity_devices_DeviceStatus_ARRAYSIZE ((smartcity_devices_DeviceStatus)(smartcity_devices_DeviceStatus_ACTIVE+1))


#define smartcity_devices_DeviceUpdate_type_ENUMTYPE smartcity_devices_DeviceType
#define smartcity_devices_DeviceUpdate_current_status_ENUMTYPE smartcity_devices_DeviceStatus

#define smartcity_devices_DeviceInfo_type_ENUMTYPE smartcity_devices_DeviceType
#define smartcity_devices_DeviceInfo_initial_state_ENUMTYPE smartcity_devices_DeviceStatus


/* Initializer values for message structs */
#define smartcity_devices_TemperatureHumidityData_init_default {0, 0}
#define smartcity_devices_DeviceUpdate_init_default {{{NULL}, NULL}, _smartcity_devices_DeviceType_MIN, _smartcity_devices_DeviceStatus_MIN, false, smartcity_devices_TemperatureHumidityData_init_default}
#define smartcity_devices_DeviceInfo_init_default {{{NULL}, NULL}, _smartcity_devices_DeviceType_MIN, {{NULL}, NULL}, 0, _smartcity_devices_DeviceStatus_MIN, 0, 0}
#define smartcity_devices_TemperatureHumidityData_init_zero {0, 0}
#define smartcity_devices_DeviceUpdate_init_zero {{{NULL}, NULL}, _smartcity_devices_DeviceType_MIN, _smartcity_devices_DeviceStatus_MIN, false, smartcity_devices_TemperatureHumidityData_init_zero}
#define smartcity_devices_DeviceInfo_init_zero   {{{NULL}, NULL}, _smartcity_devices_DeviceType_MIN, {{NULL}, NULL}, 0, _smartcity_devices_DeviceStatus_MIN, 0, 0}

/* Field tags (for use in manual encoding/decoding) */
#define smartcity_devices_TemperatureHumidityData_temperature_tag 1
#define smartcity_devices_TemperatureHumidityData_humidity_tag 2
#define smartcity_devices_DeviceUpdate_device_id_tag 1
#define smartcity_devices_DeviceUpdate_type_tag  2
#define smartcity_devices_DeviceUpdate_current_status_tag 3
#define smartcity_devices_DeviceUpdate_temperature_humidity_tag 4
#define smartcity_devices_DeviceInfo_device_id_tag 1
#define smartcity_devices_DeviceInfo_type_tag    2
#define smartcity_devices_DeviceInfo_ip_address_tag 3
#define smartcity_devices_DeviceInfo_port_tag    4
#define smartcity_devices_DeviceInfo_initial_state_tag 5
#define smartcity_devices_DeviceInfo_is_actuator_tag 6
#define smartcity_devices_DeviceInfo_is_sensor_tag 7

/* Struct field encoding specification for nanopb */
#define smartcity_devices_TemperatureHumidityData_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, DOUBLE,   temperature,       1) \
X(a, STATIC,   SINGULAR, DOUBLE,   humidity,          2)
#define smartcity_devices_TemperatureHumidityData_CALLBACK NULL
#define smartcity_devices_TemperatureHumidityData_DEFAULT NULL

#define smartcity_devices_DeviceUpdate_FIELDLIST(X, a) \
X(a, CALLBACK, SINGULAR, STRING,   device_id,         1) \
X(a, STATIC,   SINGULAR, UENUM,    type,              2) \
X(a, STATIC,   SINGULAR, UENUM,    current_status,    3) \
X(a, STATIC,   OPTIONAL, MESSAGE,  temperature_humidity,   4)
#define smartcity_devices_DeviceUpdate_CALLBACK pb_default_field_callback
#define smartcity_devices_DeviceUpdate_DEFAULT NULL
#define smartcity_devices_DeviceUpdate_temperature_humidity_MSGTYPE smartcity_devices_TemperatureHumidityData

#define smartcity_devices_DeviceInfo_FIELDLIST(X, a) \
X(a, CALLBACK, SINGULAR, STRING,   device_id,         1) \
X(a, STATIC,   SINGULAR, UENUM,    type,              2) \
X(a, CALLBACK, SINGULAR, STRING,   ip_address,        3) \
X(a, STATIC,   SINGULAR, INT32,    port,              4) \
X(a, STATIC,   SINGULAR, UENUM,    initial_state,     5) \
X(a, STATIC,   SINGULAR, BOOL,     is_actuator,       6) \
X(a, STATIC,   SINGULAR, BOOL,     is_sensor,         7)
#define smartcity_devices_DeviceInfo_CALLBACK pb_default_field_callback
#define smartcity_devices_DeviceInfo_DEFAULT NULL

extern const pb_msgdesc_t smartcity_devices_TemperatureHumidityData_msg;
extern const pb_msgdesc_t smartcity_devices_DeviceUpdate_msg;
extern const pb_msgdesc_t smartcity_devices_DeviceInfo_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define smartcity_devices_TemperatureHumidityData_fields &smartcity_devices_TemperatureHumidityData_msg
#define smartcity_devices_DeviceUpdate_fields &smartcity_devices_DeviceUpdate_msg
#define smartcity_devices_DeviceInfo_fields &smartcity_devices_DeviceInfo_msg

/* Maximum encoded size of messages (where known) */
/* smartcity_devices_DeviceUpdate_size depends on runtime parameters */
/* smartcity_devices_DeviceInfo_size depends on runtime parameters */
#define SMARTCITY_DEVICES_SMART_CITY_ESP8266_PB_H_MAX_SIZE smartcity_devices_TemperatureHumidityData_size
#define smartcity_devices_TemperatureHumidityData_size 18

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
 