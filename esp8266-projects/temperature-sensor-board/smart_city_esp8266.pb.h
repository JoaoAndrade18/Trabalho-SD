/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.9.1 */

#ifndef PB_SMARTCITY_DEVICES_SMART_CITY_ESP8266_PB_H_INCLUDED
#define PB_SMARTCITY_DEVICES_SMART_CITY_ESP8266_PB_H_INCLUDED
#include "pb.h"

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

/* Enum definitions */
/* Enumeração para os tipos de dispositivos */
typedef enum _smartcity_devices_DeviceType {
    smartcity_devices_DeviceType_UNKNOWN_DEVICE = 0, /* Tipo de dispositivo desconhecido */
    smartcity_devices_DeviceType_CAMERA = 1, /* Câmera */
    smartcity_devices_DeviceType_POST = 2, /* Poste de luz */
    smartcity_devices_DeviceType_TRAFFIC_LIGHT = 3, /* Semáforo */
    smartcity_devices_DeviceType_AIR_QUALITY_SENSOR = 4, /* Sensor de qualidade do ar */
    smartcity_devices_DeviceType_TEMPERATURE_SENSOR = 5, /* Sensor de temperatura */
    smartcity_devices_DeviceType_ALARM = 6, /* Tipo para o atuador de alarme */
    smartcity_devices_DeviceType_CURRENT_SENSOR = 7, /* Novo: Sensor de Corrente */
    smartcity_devices_DeviceType_AC_IR_CONTROLLER = 8 /* Novo: Controlador de Ar-condicionado IR */
} smartcity_devices_DeviceType;

/* Enumeração para o status dos dispositivos */
typedef enum _smartcity_devices_DeviceStatus {
    smartcity_devices_DeviceStatus_UNKNOWN_STATUS = 0, /* Status desconhecido */
    smartcity_devices_DeviceStatus_ON = 1, /* Ligado */
    smartcity_devices_DeviceStatus_OFF = 2, /* Desligado */
    smartcity_devices_DeviceStatus_IDLE = 3, /* Ocioso */
    smartcity_devices_DeviceStatus_ACTIVE = 4, /* Ativo */
    smartcity_devices_DeviceStatus_ERROR = 5, /* Em erro */
    smartcity_devices_DeviceStatus_RED = 6, /* Sinal vermelho (para Semáforo) */
    smartcity_devices_DeviceStatus_GREEN = 7 /* Sinal verde (para Semáforo) */
} smartcity_devices_DeviceStatus;

typedef enum _smartcity_devices_ClientRequest_RequestType {
    smartcity_devices_ClientRequest_RequestType_UNKNOWN_REQUEST = 0, /* Tipo de requisição desconhecido */
    smartcity_devices_ClientRequest_RequestType_LIST_DEVICES = 1, /* Cliente requisita uma lista de dispositivos conectados */
    smartcity_devices_ClientRequest_RequestType_GET_DEVICE_STATUS = 2, /* Cliente requisita o status de um dispositivo específico */
    smartcity_devices_ClientRequest_RequestType_SEND_DEVICE_COMMAND = 3 /* Cliente envia um comando para um dispositivo específico */
} smartcity_devices_ClientRequest_RequestType;

typedef enum _smartcity_devices_GatewayResponse_ResponseType {
    smartcity_devices_GatewayResponse_ResponseType_UNKNOWN_RESPONSE = 0, /* Tipo de resposta desconhecido */
    smartcity_devices_GatewayResponse_ResponseType_DEVICE_LIST = 1, /* Resposta a LIST_DEVICES */
    smartcity_devices_GatewayResponse_ResponseType_DEVICE_STATUS_UPDATE = 2, /* Resposta a GET_DEVICE_STATUS */
    smartcity_devices_GatewayResponse_ResponseType_COMMAND_ACK = 3, /* Confirmação para SEND_DEVICE_COMMAND */
    smartcity_devices_GatewayResponse_ResponseType_ERROR = 4 /* Resposta de erro geral */
} smartcity_devices_GatewayResponse_ResponseType;

/* Struct definitions */
/* Mensagem enviada pelo Gateway para descobrir dispositivos */
typedef struct _smartcity_devices_DiscoveryRequest {
    pb_callback_t gateway_ip; /* Endereço IP do Gateway */
    int32_t gateway_tcp_port; /* Porta TCP do Gateway (para comunicação de controle) */
    int32_t gateway_udp_port; /* Porta UDP do Gateway (para recebimento de dados sensoriados) */
} smartcity_devices_DiscoveryRequest;

/* Mensagem enviada pelo Dispositivo em resposta a uma DiscoveryRequest */
typedef struct _smartcity_devices_DeviceInfo {
    pb_callback_t device_id; /* ID único para o dispositivo (e.g., "camera_001") */
    smartcity_devices_DeviceType type; /* Tipo do dispositivo (e.g., CAMERA, ALARM) */
    pb_callback_t ip_address; /* Endereço IP do dispositivo */
    int32_t port; /* Porta TCP do dispositivo para controle */
    smartcity_devices_DeviceStatus initial_state; /* Estado inicial do dispositivo (e.g., ON, OFF) */
    bool is_actuator; /* Verdadeiro se o dispositivo pode receber comandos para modificar seu estado */
    bool is_sensor; /* Verdadeiro se o dispositivo é um sensor que envia dados */
    pb_callback_t capabilities; /* Ex: "max_current":"30A", "brand":"LG" */
} smartcity_devices_DeviceInfo;

typedef struct _smartcity_devices_DeviceInfo_CapabilitiesEntry {
    pb_callback_t key;
    pb_callback_t value;
} smartcity_devices_DeviceInfo_CapabilitiesEntry;

typedef struct _smartcity_devices_TemperatureHumidityData {
    double temperature;
    double humidity;
} smartcity_devices_TemperatureHumidityData;

typedef struct _smartcity_devices_AirQualityData {
    double air_quality_index;
} smartcity_devices_AirQualityData;

typedef struct _smartcity_devices_CurrentSensorData {
    double current; /* Corrente em amperes */
    double voltage; /* Tensão em volts (opcional) */
    double power; /* Potência em watts (opcional) */
} smartcity_devices_CurrentSensorData;

typedef struct _smartcity_devices_CameraData {
    pb_callback_t resolution;
    int32_t frame_rate;
} smartcity_devices_CameraData;

typedef struct _smartcity_devices_ACIRStatus {
    pb_callback_t brand; /* Marca do ar-condicionado */
    pb_callback_t mode; /* Ex: "cool", "heat", "fan" */
    int32_t temperature; /* Temperatura configurada */
    bool power; /* Ligado/desligado */
    pb_callback_t fan_speed; /* Ex: "low", "medium", "high" */
} smartcity_devices_ACIRStatus;

/* Mensagem para atualizações de estado do dispositivo ou leituras de sensor periódicas */
typedef struct _smartcity_devices_DeviceUpdate {
    pb_callback_t device_id; /* ID do dispositivo */
    smartcity_devices_DeviceType type; /* Tipo do dispositivo */
    smartcity_devices_DeviceStatus current_status; /* Para atuadores (e.g., ON/OFF para alarme, RED/GREEN para semáforo) */
    pb_size_t which_data;
    union {
        smartcity_devices_TemperatureHumidityData temperature_humidity;
        smartcity_devices_AirQualityData air_quality;
        smartcity_devices_CurrentSensorData current_sensor;
        smartcity_devices_CameraData camera;
        smartcity_devices_ACIRStatus ac_ir_status; /* Adicione outros tipos aqui */
    } data;
    pb_callback_t custom_config_status; /* Para reportar a configuração atual (e.g., "HD" para câmera, "10s" para semáforo) */
} smartcity_devices_DeviceUpdate;

/* Mensagem para comandos enviados do Gateway para o Dispositivo (via TCP) */
typedef struct _smartcity_devices_DeviceCommand {
    pb_callback_t device_id; /* ID do dispositivo alvo */
    smartcity_devices_DeviceType type; /* Tipo do dispositivo alvo */
    /* Tipos de comando (e.g., "TURN_ON", "TURN_OFF", "SET_RESOLUTION", "SET_TRAFFIC_LIGHT_TIMER") */
    pb_callback_t command_type;
    /* Valores do comando (e.g., "ON", "OFF", "FullHD", "15s"). Pode ser uma string para acomodar vários tipos de valores. */
    pb_callback_t command_value;
} smartcity_devices_DeviceCommand;

/* Requisições do Cliente para o Gateway */
typedef struct _smartcity_devices_ClientRequest {
    smartcity_devices_ClientRequest_RequestType type;
    pb_callback_t target_device_id; /* Necessário para GET_DEVICE_STATUS e SEND_DEVICE_COMMAND */
    bool has_command;
    smartcity_devices_DeviceCommand command; /* Necessário para SEND_DEVICE_COMMAND */
} smartcity_devices_ClientRequest;

/* Respostas do Gateway para o Cliente */
typedef struct _smartcity_devices_GatewayResponse {
    smartcity_devices_GatewayResponse_ResponseType type;
    pb_callback_t message; /* Mensagem geral (e.g., descrição de erro, confirmação de sucesso) */
    pb_callback_t devices; /* Para DEVICE_LIST. Contém informações básicas dos dispositivos. */
    bool has_device_status;
    smartcity_devices_DeviceUpdate device_status; /* Para DEVICE_STATUS_UPDATE. Contém status detalhado. */
    pb_callback_t command_status; /* Para COMMAND_ACK (e.g., "SUCCESS", "FAILED") */
} smartcity_devices_GatewayResponse;


#ifdef __cplusplus
extern "C" {
#endif

/* Helper constants for enums */
#define _smartcity_devices_DeviceType_MIN smartcity_devices_DeviceType_UNKNOWN_DEVICE
#define _smartcity_devices_DeviceType_MAX smartcity_devices_DeviceType_AC_IR_CONTROLLER
#define _smartcity_devices_DeviceType_ARRAYSIZE ((smartcity_devices_DeviceType)(smartcity_devices_DeviceType_AC_IR_CONTROLLER+1))

#define _smartcity_devices_DeviceStatus_MIN smartcity_devices_DeviceStatus_UNKNOWN_STATUS
#define _smartcity_devices_DeviceStatus_MAX smartcity_devices_DeviceStatus_GREEN
#define _smartcity_devices_DeviceStatus_ARRAYSIZE ((smartcity_devices_DeviceStatus)(smartcity_devices_DeviceStatus_GREEN+1))

#define _smartcity_devices_ClientRequest_RequestType_MIN smartcity_devices_ClientRequest_RequestType_UNKNOWN_REQUEST
#define _smartcity_devices_ClientRequest_RequestType_MAX smartcity_devices_ClientRequest_RequestType_SEND_DEVICE_COMMAND
#define _smartcity_devices_ClientRequest_RequestType_ARRAYSIZE ((smartcity_devices_ClientRequest_RequestType)(smartcity_devices_ClientRequest_RequestType_SEND_DEVICE_COMMAND+1))

#define _smartcity_devices_GatewayResponse_ResponseType_MIN smartcity_devices_GatewayResponse_ResponseType_UNKNOWN_RESPONSE
#define _smartcity_devices_GatewayResponse_ResponseType_MAX smartcity_devices_GatewayResponse_ResponseType_ERROR
#define _smartcity_devices_GatewayResponse_ResponseType_ARRAYSIZE ((smartcity_devices_GatewayResponse_ResponseType)(smartcity_devices_GatewayResponse_ResponseType_ERROR+1))


#define smartcity_devices_DeviceInfo_type_ENUMTYPE smartcity_devices_DeviceType
#define smartcity_devices_DeviceInfo_initial_state_ENUMTYPE smartcity_devices_DeviceStatus


#define smartcity_devices_DeviceUpdate_type_ENUMTYPE smartcity_devices_DeviceType
#define smartcity_devices_DeviceUpdate_current_status_ENUMTYPE smartcity_devices_DeviceStatus






#define smartcity_devices_DeviceCommand_type_ENUMTYPE smartcity_devices_DeviceType

#define smartcity_devices_ClientRequest_type_ENUMTYPE smartcity_devices_ClientRequest_RequestType

#define smartcity_devices_GatewayResponse_type_ENUMTYPE smartcity_devices_GatewayResponse_ResponseType


/* Initializer values for message structs */
#define smartcity_devices_DiscoveryRequest_init_default {{{NULL}, NULL}, 0, 0}
#define smartcity_devices_DeviceInfo_init_default {{{NULL}, NULL}, _smartcity_devices_DeviceType_MIN, {{NULL}, NULL}, 0, _smartcity_devices_DeviceStatus_MIN, 0, 0, {{NULL}, NULL}}
#define smartcity_devices_DeviceInfo_CapabilitiesEntry_init_default {{{NULL}, NULL}, {{NULL}, NULL}}
#define smartcity_devices_DeviceUpdate_init_default {{{NULL}, NULL}, _smartcity_devices_DeviceType_MIN, _smartcity_devices_DeviceStatus_MIN, 0, {smartcity_devices_TemperatureHumidityData_init_default}, {{NULL}, NULL}}
#define smartcity_devices_TemperatureHumidityData_init_default {0, 0}
#define smartcity_devices_AirQualityData_init_default {0}
#define smartcity_devices_CurrentSensorData_init_default {0, 0, 0}
#define smartcity_devices_CameraData_init_default {{{NULL}, NULL}, 0}
#define smartcity_devices_ACIRStatus_init_default {{{NULL}, NULL}, {{NULL}, NULL}, 0, 0, {{NULL}, NULL}}
#define smartcity_devices_DeviceCommand_init_default {{{NULL}, NULL}, _smartcity_devices_DeviceType_MIN, {{NULL}, NULL}, {{NULL}, NULL}}
#define smartcity_devices_ClientRequest_init_default {_smartcity_devices_ClientRequest_RequestType_MIN, {{NULL}, NULL}, false, smartcity_devices_DeviceCommand_init_default}
#define smartcity_devices_GatewayResponse_init_default {_smartcity_devices_GatewayResponse_ResponseType_MIN, {{NULL}, NULL}, {{NULL}, NULL}, false, smartcity_devices_DeviceUpdate_init_default, {{NULL}, NULL}}
#define smartcity_devices_DiscoveryRequest_init_zero {{{NULL}, NULL}, 0, 0}
#define smartcity_devices_DeviceInfo_init_zero   {{{NULL}, NULL}, _smartcity_devices_DeviceType_MIN, {{NULL}, NULL}, 0, _smartcity_devices_DeviceStatus_MIN, 0, 0, {{NULL}, NULL}}
#define smartcity_devices_DeviceInfo_CapabilitiesEntry_init_zero {{{NULL}, NULL}, {{NULL}, NULL}}
#define smartcity_devices_DeviceUpdate_init_zero {{{NULL}, NULL}, _smartcity_devices_DeviceType_MIN, _smartcity_devices_DeviceStatus_MIN, 0, {smartcity_devices_TemperatureHumidityData_init_zero}, {{NULL}, NULL}}
#define smartcity_devices_TemperatureHumidityData_init_zero {0, 0}
#define smartcity_devices_AirQualityData_init_zero {0}
#define smartcity_devices_CurrentSensorData_init_zero {0, 0, 0}
#define smartcity_devices_CameraData_init_zero   {{{NULL}, NULL}, 0}
#define smartcity_devices_ACIRStatus_init_zero   {{{NULL}, NULL}, {{NULL}, NULL}, 0, 0, {{NULL}, NULL}}
#define smartcity_devices_DeviceCommand_init_zero {{{NULL}, NULL}, _smartcity_devices_DeviceType_MIN, {{NULL}, NULL}, {{NULL}, NULL}}
#define smartcity_devices_ClientRequest_init_zero {_smartcity_devices_ClientRequest_RequestType_MIN, {{NULL}, NULL}, false, smartcity_devices_DeviceCommand_init_zero}
#define smartcity_devices_GatewayResponse_init_zero {_smartcity_devices_GatewayResponse_ResponseType_MIN, {{NULL}, NULL}, {{NULL}, NULL}, false, smartcity_devices_DeviceUpdate_init_zero, {{NULL}, NULL}}

/* Field tags (for use in manual encoding/decoding) */
#define smartcity_devices_DiscoveryRequest_gateway_ip_tag 1
#define smartcity_devices_DiscoveryRequest_gateway_tcp_port_tag 2
#define smartcity_devices_DiscoveryRequest_gateway_udp_port_tag 3
#define smartcity_devices_DeviceInfo_device_id_tag 1
#define smartcity_devices_DeviceInfo_type_tag    2
#define smartcity_devices_DeviceInfo_ip_address_tag 3
#define smartcity_devices_DeviceInfo_port_tag    4
#define smartcity_devices_DeviceInfo_initial_state_tag 5
#define smartcity_devices_DeviceInfo_is_actuator_tag 6
#define smartcity_devices_DeviceInfo_is_sensor_tag 7
#define smartcity_devices_DeviceInfo_capabilities_tag 8
#define smartcity_devices_DeviceInfo_CapabilitiesEntry_key_tag 1
#define smartcity_devices_DeviceInfo_CapabilitiesEntry_value_tag 2
#define smartcity_devices_TemperatureHumidityData_temperature_tag 1
#define smartcity_devices_TemperatureHumidityData_humidity_tag 2
#define smartcity_devices_AirQualityData_air_quality_index_tag 1
#define smartcity_devices_CurrentSensorData_current_tag 1
#define smartcity_devices_CurrentSensorData_voltage_tag 2
#define smartcity_devices_CurrentSensorData_power_tag 3
#define smartcity_devices_CameraData_resolution_tag 1
#define smartcity_devices_CameraData_frame_rate_tag 2
#define smartcity_devices_ACIRStatus_brand_tag   1
#define smartcity_devices_ACIRStatus_mode_tag    2
#define smartcity_devices_ACIRStatus_temperature_tag 3
#define smartcity_devices_ACIRStatus_power_tag   4
#define smartcity_devices_ACIRStatus_fan_speed_tag 5
#define smartcity_devices_DeviceUpdate_device_id_tag 1
#define smartcity_devices_DeviceUpdate_type_tag  2
#define smartcity_devices_DeviceUpdate_current_status_tag 3
#define smartcity_devices_DeviceUpdate_temperature_humidity_tag 4
#define smartcity_devices_DeviceUpdate_air_quality_tag 5
#define smartcity_devices_DeviceUpdate_current_sensor_tag 6
#define smartcity_devices_DeviceUpdate_camera_tag 7
#define smartcity_devices_DeviceUpdate_ac_ir_status_tag 8
#define smartcity_devices_DeviceUpdate_custom_config_status_tag 20
#define smartcity_devices_DeviceCommand_device_id_tag 1
#define smartcity_devices_DeviceCommand_type_tag 2
#define smartcity_devices_DeviceCommand_command_type_tag 3
#define smartcity_devices_DeviceCommand_command_value_tag 4
#define smartcity_devices_ClientRequest_type_tag 1
#define smartcity_devices_ClientRequest_target_device_id_tag 2
#define smartcity_devices_ClientRequest_command_tag 3
#define smartcity_devices_GatewayResponse_type_tag 1
#define smartcity_devices_GatewayResponse_message_tag 2
#define smartcity_devices_GatewayResponse_devices_tag 3
#define smartcity_devices_GatewayResponse_device_status_tag 4
#define smartcity_devices_GatewayResponse_command_status_tag 5

/* Struct field encoding specification for nanopb */
#define smartcity_devices_DiscoveryRequest_FIELDLIST(X, a) \
X(a, CALLBACK, SINGULAR, STRING,   gateway_ip,        1) \
X(a, STATIC,   SINGULAR, INT32,    gateway_tcp_port,   2) \
X(a, STATIC,   SINGULAR, INT32,    gateway_udp_port,   3)
#define smartcity_devices_DiscoveryRequest_CALLBACK pb_default_field_callback
#define smartcity_devices_DiscoveryRequest_DEFAULT NULL

#define smartcity_devices_DeviceInfo_FIELDLIST(X, a) \
X(a, CALLBACK, SINGULAR, STRING,   device_id,         1) \
X(a, STATIC,   SINGULAR, UENUM,    type,              2) \
X(a, CALLBACK, SINGULAR, STRING,   ip_address,        3) \
X(a, STATIC,   SINGULAR, INT32,    port,              4) \
X(a, STATIC,   SINGULAR, UENUM,    initial_state,     5) \
X(a, STATIC,   SINGULAR, BOOL,     is_actuator,       6) \
X(a, STATIC,   SINGULAR, BOOL,     is_sensor,         7) \
X(a, CALLBACK, REPEATED, MESSAGE,  capabilities,      8)
#define smartcity_devices_DeviceInfo_CALLBACK pb_default_field_callback
#define smartcity_devices_DeviceInfo_DEFAULT NULL
#define smartcity_devices_DeviceInfo_capabilities_MSGTYPE smartcity_devices_DeviceInfo_CapabilitiesEntry

#define smartcity_devices_DeviceInfo_CapabilitiesEntry_FIELDLIST(X, a) \
X(a, CALLBACK, SINGULAR, STRING,   key,               1) \
X(a, CALLBACK, SINGULAR, STRING,   value,             2)
#define smartcity_devices_DeviceInfo_CapabilitiesEntry_CALLBACK pb_default_field_callback
#define smartcity_devices_DeviceInfo_CapabilitiesEntry_DEFAULT NULL

#define smartcity_devices_DeviceUpdate_FIELDLIST(X, a) \
X(a, CALLBACK, SINGULAR, STRING,   device_id,         1) \
X(a, STATIC,   SINGULAR, UENUM,    type,              2) \
X(a, STATIC,   SINGULAR, UENUM,    current_status,    3) \
X(a, STATIC,   ONEOF,    MESSAGE,  (data,temperature_humidity,data.temperature_humidity),   4) \
X(a, STATIC,   ONEOF,    MESSAGE,  (data,air_quality,data.air_quality),   5) \
X(a, STATIC,   ONEOF,    MESSAGE,  (data,current_sensor,data.current_sensor),   6) \
X(a, STATIC,   ONEOF,    MESSAGE,  (data,camera,data.camera),   7) \
X(a, STATIC,   ONEOF,    MESSAGE,  (data,ac_ir_status,data.ac_ir_status),   8) \
X(a, CALLBACK, SINGULAR, STRING,   custom_config_status,  20)
#define smartcity_devices_DeviceUpdate_CALLBACK pb_default_field_callback
#define smartcity_devices_DeviceUpdate_DEFAULT NULL
#define smartcity_devices_DeviceUpdate_data_temperature_humidity_MSGTYPE smartcity_devices_TemperatureHumidityData
#define smartcity_devices_DeviceUpdate_data_air_quality_MSGTYPE smartcity_devices_AirQualityData
#define smartcity_devices_DeviceUpdate_data_current_sensor_MSGTYPE smartcity_devices_CurrentSensorData
#define smartcity_devices_DeviceUpdate_data_camera_MSGTYPE smartcity_devices_CameraData
#define smartcity_devices_DeviceUpdate_data_ac_ir_status_MSGTYPE smartcity_devices_ACIRStatus

#define smartcity_devices_TemperatureHumidityData_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, DOUBLE,   temperature,       1) \
X(a, STATIC,   SINGULAR, DOUBLE,   humidity,          2)
#define smartcity_devices_TemperatureHumidityData_CALLBACK NULL
#define smartcity_devices_TemperatureHumidityData_DEFAULT NULL

#define smartcity_devices_AirQualityData_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, DOUBLE,   air_quality_index,   1)
#define smartcity_devices_AirQualityData_CALLBACK NULL
#define smartcity_devices_AirQualityData_DEFAULT NULL

#define smartcity_devices_CurrentSensorData_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, DOUBLE,   current,           1) \
X(a, STATIC,   SINGULAR, DOUBLE,   voltage,           2) \
X(a, STATIC,   SINGULAR, DOUBLE,   power,             3)
#define smartcity_devices_CurrentSensorData_CALLBACK NULL
#define smartcity_devices_CurrentSensorData_DEFAULT NULL

#define smartcity_devices_CameraData_FIELDLIST(X, a) \
X(a, CALLBACK, SINGULAR, STRING,   resolution,        1) \
X(a, STATIC,   SINGULAR, INT32,    frame_rate,        2)
#define smartcity_devices_CameraData_CALLBACK pb_default_field_callback
#define smartcity_devices_CameraData_DEFAULT NULL

#define smartcity_devices_ACIRStatus_FIELDLIST(X, a) \
X(a, CALLBACK, SINGULAR, STRING,   brand,             1) \
X(a, CALLBACK, SINGULAR, STRING,   mode,              2) \
X(a, STATIC,   SINGULAR, INT32,    temperature,       3) \
X(a, STATIC,   SINGULAR, BOOL,     power,             4) \
X(a, CALLBACK, SINGULAR, STRING,   fan_speed,         5)
#define smartcity_devices_ACIRStatus_CALLBACK pb_default_field_callback
#define smartcity_devices_ACIRStatus_DEFAULT NULL

#define smartcity_devices_DeviceCommand_FIELDLIST(X, a) \
X(a, CALLBACK, SINGULAR, STRING,   device_id,         1) \
X(a, STATIC,   SINGULAR, UENUM,    type,              2) \
X(a, CALLBACK, SINGULAR, STRING,   command_type,      3) \
X(a, CALLBACK, SINGULAR, STRING,   command_value,     4)
#define smartcity_devices_DeviceCommand_CALLBACK pb_default_field_callback
#define smartcity_devices_DeviceCommand_DEFAULT NULL

#define smartcity_devices_ClientRequest_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UENUM,    type,              1) \
X(a, CALLBACK, SINGULAR, STRING,   target_device_id,   2) \
X(a, STATIC,   OPTIONAL, MESSAGE,  command,           3)
#define smartcity_devices_ClientRequest_CALLBACK pb_default_field_callback
#define smartcity_devices_ClientRequest_DEFAULT NULL
#define smartcity_devices_ClientRequest_command_MSGTYPE smartcity_devices_DeviceCommand

#define smartcity_devices_GatewayResponse_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UENUM,    type,              1) \
X(a, CALLBACK, SINGULAR, STRING,   message,           2) \
X(a, CALLBACK, REPEATED, MESSAGE,  devices,           3) \
X(a, STATIC,   OPTIONAL, MESSAGE,  device_status,     4) \
X(a, CALLBACK, SINGULAR, STRING,   command_status,    5)
#define smartcity_devices_GatewayResponse_CALLBACK pb_default_field_callback
#define smartcity_devices_GatewayResponse_DEFAULT NULL
#define smartcity_devices_GatewayResponse_devices_MSGTYPE smartcity_devices_DeviceInfo
#define smartcity_devices_GatewayResponse_device_status_MSGTYPE smartcity_devices_DeviceUpdate

extern const pb_msgdesc_t smartcity_devices_DiscoveryRequest_msg;
extern const pb_msgdesc_t smartcity_devices_DeviceInfo_msg;
extern const pb_msgdesc_t smartcity_devices_DeviceInfo_CapabilitiesEntry_msg;
extern const pb_msgdesc_t smartcity_devices_DeviceUpdate_msg;
extern const pb_msgdesc_t smartcity_devices_TemperatureHumidityData_msg;
extern const pb_msgdesc_t smartcity_devices_AirQualityData_msg;
extern const pb_msgdesc_t smartcity_devices_CurrentSensorData_msg;
extern const pb_msgdesc_t smartcity_devices_CameraData_msg;
extern const pb_msgdesc_t smartcity_devices_ACIRStatus_msg;
extern const pb_msgdesc_t smartcity_devices_DeviceCommand_msg;
extern const pb_msgdesc_t smartcity_devices_ClientRequest_msg;
extern const pb_msgdesc_t smartcity_devices_GatewayResponse_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define smartcity_devices_DiscoveryRequest_fields &smartcity_devices_DiscoveryRequest_msg
#define smartcity_devices_DeviceInfo_fields &smartcity_devices_DeviceInfo_msg
#define smartcity_devices_DeviceInfo_CapabilitiesEntry_fields &smartcity_devices_DeviceInfo_CapabilitiesEntry_msg
#define smartcity_devices_DeviceUpdate_fields &smartcity_devices_DeviceUpdate_msg
#define smartcity_devices_TemperatureHumidityData_fields &smartcity_devices_TemperatureHumidityData_msg
#define smartcity_devices_AirQualityData_fields &smartcity_devices_AirQualityData_msg
#define smartcity_devices_CurrentSensorData_fields &smartcity_devices_CurrentSensorData_msg
#define smartcity_devices_CameraData_fields &smartcity_devices_CameraData_msg
#define smartcity_devices_ACIRStatus_fields &smartcity_devices_ACIRStatus_msg
#define smartcity_devices_DeviceCommand_fields &smartcity_devices_DeviceCommand_msg
#define smartcity_devices_ClientRequest_fields &smartcity_devices_ClientRequest_msg
#define smartcity_devices_GatewayResponse_fields &smartcity_devices_GatewayResponse_msg

/* Maximum encoded size of messages (where known) */
/* smartcity_devices_DiscoveryRequest_size depends on runtime parameters */
/* smartcity_devices_DeviceInfo_size depends on runtime parameters */
/* smartcity_devices_DeviceInfo_CapabilitiesEntry_size depends on runtime parameters */
/* smartcity_devices_DeviceUpdate_size depends on runtime parameters */
/* smartcity_devices_CameraData_size depends on runtime parameters */
/* smartcity_devices_ACIRStatus_size depends on runtime parameters */
/* smartcity_devices_DeviceCommand_size depends on runtime parameters */
/* smartcity_devices_ClientRequest_size depends on runtime parameters */
/* smartcity_devices_GatewayResponse_size depends on runtime parameters */
#define SMARTCITY_DEVICES_SMART_CITY_ESP8266_PB_H_MAX_SIZE smartcity_devices_CurrentSensorData_size
#define smartcity_devices_AirQualityData_size    9
#define smartcity_devices_CurrentSensorData_size 27
#define smartcity_devices_TemperatureHumidityData_size 18

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
