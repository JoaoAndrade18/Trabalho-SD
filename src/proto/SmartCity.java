// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: smart_city.proto

// Protobuf Java Version: 3.25.1
package smartcity;

public final class SmartCity {
  private SmartCity() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  /**
   * <pre>
   * Enumeração para os tipos de dispositivos
   * </pre>
   *
   * Protobuf enum {@code smartcity.DeviceType}
   */
  public enum DeviceType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     * Tipo de dispositivo desconhecido
     * </pre>
     *
     * <code>UNKNOWN_DEVICE = 0;</code>
     */
    UNKNOWN_DEVICE(0),
    /**
     * <pre>
     * Câmera
     * </pre>
     *
     * <code>CAMERA = 1;</code>
     */
    CAMERA(1),
    /**
     * <pre>
     * Poste de luz
     * </pre>
     *
     * <code>POST = 2;</code>
     */
    POST(2),
    /**
     * <pre>
     * Semáforo
     * </pre>
     *
     * <code>TRAFFIC_LIGHT = 3;</code>
     */
    TRAFFIC_LIGHT(3),
    /**
     * <pre>
     * Sensor de qualidade do ar
     * </pre>
     *
     * <code>AIR_QUALITY_SENSOR = 4;</code>
     */
    AIR_QUALITY_SENSOR(4),
    /**
     * <pre>
     * Sensor de temperatura
     * </pre>
     *
     * <code>TEMPERATURE_SENSOR = 5;</code>
     */
    TEMPERATURE_SENSOR(5),
    UNRECOGNIZED(-1),
    ;

    /**
     * <pre>
     * Tipo de dispositivo desconhecido
     * </pre>
     *
     * <code>UNKNOWN_DEVICE = 0;</code>
     */
    public static final int UNKNOWN_DEVICE_VALUE = 0;
    /**
     * <pre>
     * Câmera
     * </pre>
     *
     * <code>CAMERA = 1;</code>
     */
    public static final int CAMERA_VALUE = 1;
    /**
     * <pre>
     * Poste de luz
     * </pre>
     *
     * <code>POST = 2;</code>
     */
    public static final int POST_VALUE = 2;
    /**
     * <pre>
     * Semáforo
     * </pre>
     *
     * <code>TRAFFIC_LIGHT = 3;</code>
     */
    public static final int TRAFFIC_LIGHT_VALUE = 3;
    /**
     * <pre>
     * Sensor de qualidade do ar
     * </pre>
     *
     * <code>AIR_QUALITY_SENSOR = 4;</code>
     */
    public static final int AIR_QUALITY_SENSOR_VALUE = 4;
    /**
     * <pre>
     * Sensor de temperatura
     * </pre>
     *
     * <code>TEMPERATURE_SENSOR = 5;</code>
     */
    public static final int TEMPERATURE_SENSOR_VALUE = 5;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static DeviceType valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static DeviceType forNumber(int value) {
      switch (value) {
        case 0: return UNKNOWN_DEVICE;
        case 1: return CAMERA;
        case 2: return POST;
        case 3: return TRAFFIC_LIGHT;
        case 4: return AIR_QUALITY_SENSOR;
        case 5: return TEMPERATURE_SENSOR;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<DeviceType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        DeviceType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<DeviceType>() {
            public DeviceType findValueByNumber(int number) {
              return DeviceType.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return smartcity.SmartCity.getDescriptor().getEnumTypes().get(0);
    }

    private static final DeviceType[] VALUES = values();

    public static DeviceType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private DeviceType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:smartcity.DeviceType)
  }

  /**
   * <pre>
   * Enumeração para o status dos dispositivos
   * </pre>
   *
   * Protobuf enum {@code smartcity.DeviceStatus}
   */
  public enum DeviceStatus
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     * Status desconhecido
     * </pre>
     *
     * <code>UNKNOWN_STATUS = 0;</code>
     */
    UNKNOWN_STATUS(0),
    /**
     * <pre>
     * Ligado
     * </pre>
     *
     * <code>ON = 1;</code>
     */
    ON(1),
    /**
     * <pre>
     * Desligado
     * </pre>
     *
     * <code>OFF = 2;</code>
     */
    OFF(2),
    /**
     * <pre>
     * Ocioso
     * </pre>
     *
     * <code>IDLE = 3;</code>
     */
    IDLE(3),
    /**
     * <pre>
     * Ativo
     * </pre>
     *
     * <code>ACTIVE = 4;</code>
     */
    ACTIVE(4),
    /**
     * <pre>
     * Em erro
     * </pre>
     *
     * <code>ERROR = 5;</code>
     */
    ERROR(5),
    /**
     * <pre>
     * Sinal vermelho (para Semáforo)
     * </pre>
     *
     * <code>RED = 6;</code>
     */
    RED(6),
    /**
     * <pre>
     * Sinal verde (para Semáforo)
     * </pre>
     *
     * <code>GREEN = 7;</code>
     */
    GREEN(7),
    UNRECOGNIZED(-1),
    ;

    /**
     * <pre>
     * Status desconhecido
     * </pre>
     *
     * <code>UNKNOWN_STATUS = 0;</code>
     */
    public static final int UNKNOWN_STATUS_VALUE = 0;
    /**
     * <pre>
     * Ligado
     * </pre>
     *
     * <code>ON = 1;</code>
     */
    public static final int ON_VALUE = 1;
    /**
     * <pre>
     * Desligado
     * </pre>
     *
     * <code>OFF = 2;</code>
     */
    public static final int OFF_VALUE = 2;
    /**
     * <pre>
     * Ocioso
     * </pre>
     *
     * <code>IDLE = 3;</code>
     */
    public static final int IDLE_VALUE = 3;
    /**
     * <pre>
     * Ativo
     * </pre>
     *
     * <code>ACTIVE = 4;</code>
     */
    public static final int ACTIVE_VALUE = 4;
    /**
     * <pre>
     * Em erro
     * </pre>
     *
     * <code>ERROR = 5;</code>
     */
    public static final int ERROR_VALUE = 5;
    /**
     * <pre>
     * Sinal vermelho (para Semáforo)
     * </pre>
     *
     * <code>RED = 6;</code>
     */
    public static final int RED_VALUE = 6;
    /**
     * <pre>
     * Sinal verde (para Semáforo)
     * </pre>
     *
     * <code>GREEN = 7;</code>
     */
    public static final int GREEN_VALUE = 7;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static DeviceStatus valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static DeviceStatus forNumber(int value) {
      switch (value) {
        case 0: return UNKNOWN_STATUS;
        case 1: return ON;
        case 2: return OFF;
        case 3: return IDLE;
        case 4: return ACTIVE;
        case 5: return ERROR;
        case 6: return RED;
        case 7: return GREEN;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<DeviceStatus>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        DeviceStatus> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<DeviceStatus>() {
            public DeviceStatus findValueByNumber(int number) {
              return DeviceStatus.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return smartcity.SmartCity.getDescriptor().getEnumTypes().get(1);
    }

    private static final DeviceStatus[] VALUES = values();

    public static DeviceStatus valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private DeviceStatus(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:smartcity.DeviceStatus)
  }

  public interface DiscoveryRequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:smartcity.DiscoveryRequest)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Endereço IP do Gateway
     * </pre>
     *
     * <code>string gateway_ip = 1;</code>
     * @return The gatewayIp.
     */
    java.lang.String getGatewayIp();
    /**
     * <pre>
     * Endereço IP do Gateway
     * </pre>
     *
     * <code>string gateway_ip = 1;</code>
     * @return The bytes for gatewayIp.
     */
    com.google.protobuf.ByteString
        getGatewayIpBytes();

    /**
     * <pre>
     * Porta TCP do Gateway (para comunicação de controle)
     * </pre>
     *
     * <code>int32 gateway_tcp_port = 2;</code>
     * @return The gatewayTcpPort.
     */
    int getGatewayTcpPort();

    /**
     * <pre>
     * Porta UDP do Gateway (para recebimento de dados sensoriados)
     * </pre>
     *
     * <code>int32 gateway_udp_port = 3;</code>
     * @return The gatewayUdpPort.
     */
    int getGatewayUdpPort();
  }
  /**
   * <pre>
   * Mensagem enviada pelo Gateway para descobrir dispositivos 
   * </pre>
   *
   * Protobuf type {@code smartcity.DiscoveryRequest}
   */
  public static final class DiscoveryRequest extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:smartcity.DiscoveryRequest)
      DiscoveryRequestOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use DiscoveryRequest.newBuilder() to construct.
    private DiscoveryRequest(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private DiscoveryRequest() {
      gatewayIp_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new DiscoveryRequest();
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return smartcity.SmartCity.internal_static_smartcity_DiscoveryRequest_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return smartcity.SmartCity.internal_static_smartcity_DiscoveryRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              smartcity.SmartCity.DiscoveryRequest.class, smartcity.SmartCity.DiscoveryRequest.Builder.class);
    }

    public static final int GATEWAY_IP_FIELD_NUMBER = 1;
    @SuppressWarnings("serial")
    private volatile java.lang.Object gatewayIp_ = "";
    /**
     * <pre>
     * Endereço IP do Gateway
     * </pre>
     *
     * <code>string gateway_ip = 1;</code>
     * @return The gatewayIp.
     */
    @java.lang.Override
    public java.lang.String getGatewayIp() {
      java.lang.Object ref = gatewayIp_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        gatewayIp_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * Endereço IP do Gateway
     * </pre>
     *
     * <code>string gateway_ip = 1;</code>
     * @return The bytes for gatewayIp.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getGatewayIpBytes() {
      java.lang.Object ref = gatewayIp_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        gatewayIp_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int GATEWAY_TCP_PORT_FIELD_NUMBER = 2;
    private int gatewayTcpPort_ = 0;
    /**
     * <pre>
     * Porta TCP do Gateway (para comunicação de controle)
     * </pre>
     *
     * <code>int32 gateway_tcp_port = 2;</code>
     * @return The gatewayTcpPort.
     */
    @java.lang.Override
    public int getGatewayTcpPort() {
      return gatewayTcpPort_;
    }

    public static final int GATEWAY_UDP_PORT_FIELD_NUMBER = 3;
    private int gatewayUdpPort_ = 0;
    /**
     * <pre>
     * Porta UDP do Gateway (para recebimento de dados sensoriados)
     * </pre>
     *
     * <code>int32 gateway_udp_port = 3;</code>
     * @return The gatewayUdpPort.
     */
    @java.lang.Override
    public int getGatewayUdpPort() {
      return gatewayUdpPort_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(gatewayIp_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, gatewayIp_);
      }
      if (gatewayTcpPort_ != 0) {
        output.writeInt32(2, gatewayTcpPort_);
      }
      if (gatewayUdpPort_ != 0) {
        output.writeInt32(3, gatewayUdpPort_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(gatewayIp_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, gatewayIp_);
      }
      if (gatewayTcpPort_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, gatewayTcpPort_);
      }
      if (gatewayUdpPort_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, gatewayUdpPort_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof smartcity.SmartCity.DiscoveryRequest)) {
        return super.equals(obj);
      }
      smartcity.SmartCity.DiscoveryRequest other = (smartcity.SmartCity.DiscoveryRequest) obj;

      if (!getGatewayIp()
          .equals(other.getGatewayIp())) return false;
      if (getGatewayTcpPort()
          != other.getGatewayTcpPort()) return false;
      if (getGatewayUdpPort()
          != other.getGatewayUdpPort()) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + GATEWAY_IP_FIELD_NUMBER;
      hash = (53 * hash) + getGatewayIp().hashCode();
      hash = (37 * hash) + GATEWAY_TCP_PORT_FIELD_NUMBER;
      hash = (53 * hash) + getGatewayTcpPort();
      hash = (37 * hash) + GATEWAY_UDP_PORT_FIELD_NUMBER;
      hash = (53 * hash) + getGatewayUdpPort();
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static smartcity.SmartCity.DiscoveryRequest parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static smartcity.SmartCity.DiscoveryRequest parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static smartcity.SmartCity.DiscoveryRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static smartcity.SmartCity.DiscoveryRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static smartcity.SmartCity.DiscoveryRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static smartcity.SmartCity.DiscoveryRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static smartcity.SmartCity.DiscoveryRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static smartcity.SmartCity.DiscoveryRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static smartcity.SmartCity.DiscoveryRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static smartcity.SmartCity.DiscoveryRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static smartcity.SmartCity.DiscoveryRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static smartcity.SmartCity.DiscoveryRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(smartcity.SmartCity.DiscoveryRequest prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Mensagem enviada pelo Gateway para descobrir dispositivos 
     * </pre>
     *
     * Protobuf type {@code smartcity.DiscoveryRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:smartcity.DiscoveryRequest)
        smartcity.SmartCity.DiscoveryRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return smartcity.SmartCity.internal_static_smartcity_DiscoveryRequest_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return smartcity.SmartCity.internal_static_smartcity_DiscoveryRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                smartcity.SmartCity.DiscoveryRequest.class, smartcity.SmartCity.DiscoveryRequest.Builder.class);
      }

      // Construct using smartcity.SmartCity.DiscoveryRequest.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        gatewayIp_ = "";
        gatewayTcpPort_ = 0;
        gatewayUdpPort_ = 0;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return smartcity.SmartCity.internal_static_smartcity_DiscoveryRequest_descriptor;
      }

      @java.lang.Override
      public smartcity.SmartCity.DiscoveryRequest getDefaultInstanceForType() {
        return smartcity.SmartCity.DiscoveryRequest.getDefaultInstance();
      }

      @java.lang.Override
      public smartcity.SmartCity.DiscoveryRequest build() {
        smartcity.SmartCity.DiscoveryRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public smartcity.SmartCity.DiscoveryRequest buildPartial() {
        smartcity.SmartCity.DiscoveryRequest result = new smartcity.SmartCity.DiscoveryRequest(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(smartcity.SmartCity.DiscoveryRequest result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.gatewayIp_ = gatewayIp_;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.gatewayTcpPort_ = gatewayTcpPort_;
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.gatewayUdpPort_ = gatewayUdpPort_;
        }
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof smartcity.SmartCity.DiscoveryRequest) {
          return mergeFrom((smartcity.SmartCity.DiscoveryRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(smartcity.SmartCity.DiscoveryRequest other) {
        if (other == smartcity.SmartCity.DiscoveryRequest.getDefaultInstance()) return this;
        if (!other.getGatewayIp().isEmpty()) {
          gatewayIp_ = other.gatewayIp_;
          bitField0_ |= 0x00000001;
          onChanged();
        }
        if (other.getGatewayTcpPort() != 0) {
          setGatewayTcpPort(other.getGatewayTcpPort());
        }
        if (other.getGatewayUdpPort() != 0) {
          setGatewayUdpPort(other.getGatewayUdpPort());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                gatewayIp_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000001;
                break;
              } // case 10
              case 16: {
                gatewayTcpPort_ = input.readInt32();
                bitField0_ |= 0x00000002;
                break;
              } // case 16
              case 24: {
                gatewayUdpPort_ = input.readInt32();
                bitField0_ |= 0x00000004;
                break;
              } // case 24
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private java.lang.Object gatewayIp_ = "";
      /**
       * <pre>
       * Endereço IP do Gateway
       * </pre>
       *
       * <code>string gateway_ip = 1;</code>
       * @return The gatewayIp.
       */
      public java.lang.String getGatewayIp() {
        java.lang.Object ref = gatewayIp_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          gatewayIp_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Endereço IP do Gateway
       * </pre>
       *
       * <code>string gateway_ip = 1;</code>
       * @return The bytes for gatewayIp.
       */
      public com.google.protobuf.ByteString
          getGatewayIpBytes() {
        java.lang.Object ref = gatewayIp_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          gatewayIp_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Endereço IP do Gateway
       * </pre>
       *
       * <code>string gateway_ip = 1;</code>
       * @param value The gatewayIp to set.
       * @return This builder for chaining.
       */
      public Builder setGatewayIp(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        gatewayIp_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Endereço IP do Gateway
       * </pre>
       *
       * <code>string gateway_ip = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearGatewayIp() {
        gatewayIp_ = getDefaultInstance().getGatewayIp();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Endereço IP do Gateway
       * </pre>
       *
       * <code>string gateway_ip = 1;</code>
       * @param value The bytes for gatewayIp to set.
       * @return This builder for chaining.
       */
      public Builder setGatewayIpBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        gatewayIp_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }

      private int gatewayTcpPort_ ;
      /**
       * <pre>
       * Porta TCP do Gateway (para comunicação de controle)
       * </pre>
       *
       * <code>int32 gateway_tcp_port = 2;</code>
       * @return The gatewayTcpPort.
       */
      @java.lang.Override
      public int getGatewayTcpPort() {
        return gatewayTcpPort_;
      }
      /**
       * <pre>
       * Porta TCP do Gateway (para comunicação de controle)
       * </pre>
       *
       * <code>int32 gateway_tcp_port = 2;</code>
       * @param value The gatewayTcpPort to set.
       * @return This builder for chaining.
       */
      public Builder setGatewayTcpPort(int value) {

        gatewayTcpPort_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Porta TCP do Gateway (para comunicação de controle)
       * </pre>
       *
       * <code>int32 gateway_tcp_port = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearGatewayTcpPort() {
        bitField0_ = (bitField0_ & ~0x00000002);
        gatewayTcpPort_ = 0;
        onChanged();
        return this;
      }

      private int gatewayUdpPort_ ;
      /**
       * <pre>
       * Porta UDP do Gateway (para recebimento de dados sensoriados)
       * </pre>
       *
       * <code>int32 gateway_udp_port = 3;</code>
       * @return The gatewayUdpPort.
       */
      @java.lang.Override
      public int getGatewayUdpPort() {
        return gatewayUdpPort_;
      }
      /**
       * <pre>
       * Porta UDP do Gateway (para recebimento de dados sensoriados)
       * </pre>
       *
       * <code>int32 gateway_udp_port = 3;</code>
       * @param value The gatewayUdpPort to set.
       * @return This builder for chaining.
       */
      public Builder setGatewayUdpPort(int value) {

        gatewayUdpPort_ = value;
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Porta UDP do Gateway (para recebimento de dados sensoriados)
       * </pre>
       *
       * <code>int32 gateway_udp_port = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearGatewayUdpPort() {
        bitField0_ = (bitField0_ & ~0x00000004);
        gatewayUdpPort_ = 0;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:smartcity.DiscoveryRequest)
    }

    // @@protoc_insertion_point(class_scope:smartcity.DiscoveryRequest)
    private static final smartcity.SmartCity.DiscoveryRequest DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new smartcity.SmartCity.DiscoveryRequest();
    }

    public static smartcity.SmartCity.DiscoveryRequest getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<DiscoveryRequest>
        PARSER = new com.google.protobuf.AbstractParser<DiscoveryRequest>() {
      @java.lang.Override
      public DiscoveryRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<DiscoveryRequest> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<DiscoveryRequest> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public smartcity.SmartCity.DiscoveryRequest getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface DeviceInfoOrBuilder extends
      // @@protoc_insertion_point(interface_extends:smartcity.DeviceInfo)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * ID único para o dispositivo (e.g., "camera_001")
     * </pre>
     *
     * <code>string device_id = 1;</code>
     * @return The deviceId.
     */
    java.lang.String getDeviceId();
    /**
     * <pre>
     * ID único para o dispositivo (e.g., "camera_001")
     * </pre>
     *
     * <code>string device_id = 1;</code>
     * @return The bytes for deviceId.
     */
    com.google.protobuf.ByteString
        getDeviceIdBytes();

    /**
     * <pre>
     * Tipo do dispositivo (e.g., CAMERA, POST) 
     * </pre>
     *
     * <code>.smartcity.DeviceType type = 2;</code>
     * @return The enum numeric value on the wire for type.
     */
    int getTypeValue();
    /**
     * <pre>
     * Tipo do dispositivo (e.g., CAMERA, POST) 
     * </pre>
     *
     * <code>.smartcity.DeviceType type = 2;</code>
     * @return The type.
     */
    smartcity.SmartCity.DeviceType getType();

    /**
     * <pre>
     * Endereço IP do dispositivo 
     * </pre>
     *
     * <code>string ip_address = 3;</code>
     * @return The ipAddress.
     */
    java.lang.String getIpAddress();
    /**
     * <pre>
     * Endereço IP do dispositivo 
     * </pre>
     *
     * <code>string ip_address = 3;</code>
     * @return The bytes for ipAddress.
     */
    com.google.protobuf.ByteString
        getIpAddressBytes();

    /**
     * <pre>
     * Porta TCP do dispositivo para controle 
     * </pre>
     *
     * <code>int32 port = 4;</code>
     * @return The port.
     */
    int getPort();

    /**
     * <pre>
     * Estado inicial do dispositivo (e.g., ON, OFF) 
     * </pre>
     *
     * <code>.smartcity.DeviceStatus initial_state = 5;</code>
     * @return The enum numeric value on the wire for initialState.
     */
    int getInitialStateValue();
    /**
     * <pre>
     * Estado inicial do dispositivo (e.g., ON, OFF) 
     * </pre>
     *
     * <code>.smartcity.DeviceStatus initial_state = 5;</code>
     * @return The initialState.
     */
    smartcity.SmartCity.DeviceStatus getInitialState();

    /**
     * <pre>
     * Verdadeiro se o dispositivo pode receber comandos para modificar seu estado 
     * </pre>
     *
     * <code>bool is_actuator = 6;</code>
     * @return The isActuator.
     */
    boolean getIsActuator();

    /**
     * <pre>
     * Verdadeiro se o dispositivo é um sensor que envia dados 
     * </pre>
     *
     * <code>bool is_sensor = 7;</code>
     * @return The isSensor.
     */
    boolean getIsSensor();
  }
  /**
   * <pre>
   * Mensagem enviada pelo Dispositivo em resposta a uma DiscoveryRequest 
   * </pre>
   *
   * Protobuf type {@code smartcity.DeviceInfo}
   */
  public static final class DeviceInfo extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:smartcity.DeviceInfo)
      DeviceInfoOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use DeviceInfo.newBuilder() to construct.
    private DeviceInfo(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private DeviceInfo() {
      deviceId_ = "";
      type_ = 0;
      ipAddress_ = "";
      initialState_ = 0;
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new DeviceInfo();
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return smartcity.SmartCity.internal_static_smartcity_DeviceInfo_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return smartcity.SmartCity.internal_static_smartcity_DeviceInfo_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              smartcity.SmartCity.DeviceInfo.class, smartcity.SmartCity.DeviceInfo.Builder.class);
    }

    public static final int DEVICE_ID_FIELD_NUMBER = 1;
    @SuppressWarnings("serial")
    private volatile java.lang.Object deviceId_ = "";
    /**
     * <pre>
     * ID único para o dispositivo (e.g., "camera_001")
     * </pre>
     *
     * <code>string device_id = 1;</code>
     * @return The deviceId.
     */
    @java.lang.Override
    public java.lang.String getDeviceId() {
      java.lang.Object ref = deviceId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        deviceId_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * ID único para o dispositivo (e.g., "camera_001")
     * </pre>
     *
     * <code>string device_id = 1;</code>
     * @return The bytes for deviceId.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getDeviceIdBytes() {
      java.lang.Object ref = deviceId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        deviceId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int TYPE_FIELD_NUMBER = 2;
    private int type_ = 0;
    /**
     * <pre>
     * Tipo do dispositivo (e.g., CAMERA, POST) 
     * </pre>
     *
     * <code>.smartcity.DeviceType type = 2;</code>
     * @return The enum numeric value on the wire for type.
     */
    @java.lang.Override public int getTypeValue() {
      return type_;
    }
    /**
     * <pre>
     * Tipo do dispositivo (e.g., CAMERA, POST) 
     * </pre>
     *
     * <code>.smartcity.DeviceType type = 2;</code>
     * @return The type.
     */
    @java.lang.Override public smartcity.SmartCity.DeviceType getType() {
      smartcity.SmartCity.DeviceType result = smartcity.SmartCity.DeviceType.forNumber(type_);
      return result == null ? smartcity.SmartCity.DeviceType.UNRECOGNIZED : result;
    }

    public static final int IP_ADDRESS_FIELD_NUMBER = 3;
    @SuppressWarnings("serial")
    private volatile java.lang.Object ipAddress_ = "";
    /**
     * <pre>
     * Endereço IP do dispositivo 
     * </pre>
     *
     * <code>string ip_address = 3;</code>
     * @return The ipAddress.
     */
    @java.lang.Override
    public java.lang.String getIpAddress() {
      java.lang.Object ref = ipAddress_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        ipAddress_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * Endereço IP do dispositivo 
     * </pre>
     *
     * <code>string ip_address = 3;</code>
     * @return The bytes for ipAddress.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getIpAddressBytes() {
      java.lang.Object ref = ipAddress_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        ipAddress_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int PORT_FIELD_NUMBER = 4;
    private int port_ = 0;
    /**
     * <pre>
     * Porta TCP do dispositivo para controle 
     * </pre>
     *
     * <code>int32 port = 4;</code>
     * @return The port.
     */
    @java.lang.Override
    public int getPort() {
      return port_;
    }

    public static final int INITIAL_STATE_FIELD_NUMBER = 5;
    private int initialState_ = 0;
    /**
     * <pre>
     * Estado inicial do dispositivo (e.g., ON, OFF) 
     * </pre>
     *
     * <code>.smartcity.DeviceStatus initial_state = 5;</code>
     * @return The enum numeric value on the wire for initialState.
     */
    @java.lang.Override public int getInitialStateValue() {
      return initialState_;
    }
    /**
     * <pre>
     * Estado inicial do dispositivo (e.g., ON, OFF) 
     * </pre>
     *
     * <code>.smartcity.DeviceStatus initial_state = 5;</code>
     * @return The initialState.
     */
    @java.lang.Override public smartcity.SmartCity.DeviceStatus getInitialState() {
      smartcity.SmartCity.DeviceStatus result = smartcity.SmartCity.DeviceStatus.forNumber(initialState_);
      return result == null ? smartcity.SmartCity.DeviceStatus.UNRECOGNIZED : result;
    }

    public static final int IS_ACTUATOR_FIELD_NUMBER = 6;
    private boolean isActuator_ = false;
    /**
     * <pre>
     * Verdadeiro se o dispositivo pode receber comandos para modificar seu estado 
     * </pre>
     *
     * <code>bool is_actuator = 6;</code>
     * @return The isActuator.
     */
    @java.lang.Override
    public boolean getIsActuator() {
      return isActuator_;
    }

    public static final int IS_SENSOR_FIELD_NUMBER = 7;
    private boolean isSensor_ = false;
    /**
     * <pre>
     * Verdadeiro se o dispositivo é um sensor que envia dados 
     * </pre>
     *
     * <code>bool is_sensor = 7;</code>
     * @return The isSensor.
     */
    @java.lang.Override
    public boolean getIsSensor() {
      return isSensor_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(deviceId_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, deviceId_);
      }
      if (type_ != smartcity.SmartCity.DeviceType.UNKNOWN_DEVICE.getNumber()) {
        output.writeEnum(2, type_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(ipAddress_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, ipAddress_);
      }
      if (port_ != 0) {
        output.writeInt32(4, port_);
      }
      if (initialState_ != smartcity.SmartCity.DeviceStatus.UNKNOWN_STATUS.getNumber()) {
        output.writeEnum(5, initialState_);
      }
      if (isActuator_ != false) {
        output.writeBool(6, isActuator_);
      }
      if (isSensor_ != false) {
        output.writeBool(7, isSensor_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(deviceId_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, deviceId_);
      }
      if (type_ != smartcity.SmartCity.DeviceType.UNKNOWN_DEVICE.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(2, type_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(ipAddress_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, ipAddress_);
      }
      if (port_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, port_);
      }
      if (initialState_ != smartcity.SmartCity.DeviceStatus.UNKNOWN_STATUS.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(5, initialState_);
      }
      if (isActuator_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(6, isActuator_);
      }
      if (isSensor_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(7, isSensor_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof smartcity.SmartCity.DeviceInfo)) {
        return super.equals(obj);
      }
      smartcity.SmartCity.DeviceInfo other = (smartcity.SmartCity.DeviceInfo) obj;

      if (!getDeviceId()
          .equals(other.getDeviceId())) return false;
      if (type_ != other.type_) return false;
      if (!getIpAddress()
          .equals(other.getIpAddress())) return false;
      if (getPort()
          != other.getPort()) return false;
      if (initialState_ != other.initialState_) return false;
      if (getIsActuator()
          != other.getIsActuator()) return false;
      if (getIsSensor()
          != other.getIsSensor()) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + DEVICE_ID_FIELD_NUMBER;
      hash = (53 * hash) + getDeviceId().hashCode();
      hash = (37 * hash) + TYPE_FIELD_NUMBER;
      hash = (53 * hash) + type_;
      hash = (37 * hash) + IP_ADDRESS_FIELD_NUMBER;
      hash = (53 * hash) + getIpAddress().hashCode();
      hash = (37 * hash) + PORT_FIELD_NUMBER;
      hash = (53 * hash) + getPort();
      hash = (37 * hash) + INITIAL_STATE_FIELD_NUMBER;
      hash = (53 * hash) + initialState_;
      hash = (37 * hash) + IS_ACTUATOR_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getIsActuator());
      hash = (37 * hash) + IS_SENSOR_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getIsSensor());
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static smartcity.SmartCity.DeviceInfo parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static smartcity.SmartCity.DeviceInfo parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static smartcity.SmartCity.DeviceInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static smartcity.SmartCity.DeviceInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static smartcity.SmartCity.DeviceInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static smartcity.SmartCity.DeviceInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static smartcity.SmartCity.DeviceInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static smartcity.SmartCity.DeviceInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static smartcity.SmartCity.DeviceInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static smartcity.SmartCity.DeviceInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static smartcity.SmartCity.DeviceInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static smartcity.SmartCity.DeviceInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(smartcity.SmartCity.DeviceInfo prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Mensagem enviada pelo Dispositivo em resposta a uma DiscoveryRequest 
     * </pre>
     *
     * Protobuf type {@code smartcity.DeviceInfo}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:smartcity.DeviceInfo)
        smartcity.SmartCity.DeviceInfoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return smartcity.SmartCity.internal_static_smartcity_DeviceInfo_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return smartcity.SmartCity.internal_static_smartcity_DeviceInfo_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                smartcity.SmartCity.DeviceInfo.class, smartcity.SmartCity.DeviceInfo.Builder.class);
      }

      // Construct using smartcity.SmartCity.DeviceInfo.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        deviceId_ = "";
        type_ = 0;
        ipAddress_ = "";
        port_ = 0;
        initialState_ = 0;
        isActuator_ = false;
        isSensor_ = false;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return smartcity.SmartCity.internal_static_smartcity_DeviceInfo_descriptor;
      }

      @java.lang.Override
      public smartcity.SmartCity.DeviceInfo getDefaultInstanceForType() {
        return smartcity.SmartCity.DeviceInfo.getDefaultInstance();
      }

      @java.lang.Override
      public smartcity.SmartCity.DeviceInfo build() {
        smartcity.SmartCity.DeviceInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public smartcity.SmartCity.DeviceInfo buildPartial() {
        smartcity.SmartCity.DeviceInfo result = new smartcity.SmartCity.DeviceInfo(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(smartcity.SmartCity.DeviceInfo result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.deviceId_ = deviceId_;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.type_ = type_;
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.ipAddress_ = ipAddress_;
        }
        if (((from_bitField0_ & 0x00000008) != 0)) {
          result.port_ = port_;
        }
        if (((from_bitField0_ & 0x00000010) != 0)) {
          result.initialState_ = initialState_;
        }
        if (((from_bitField0_ & 0x00000020) != 0)) {
          result.isActuator_ = isActuator_;
        }
        if (((from_bitField0_ & 0x00000040) != 0)) {
          result.isSensor_ = isSensor_;
        }
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof smartcity.SmartCity.DeviceInfo) {
          return mergeFrom((smartcity.SmartCity.DeviceInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(smartcity.SmartCity.DeviceInfo other) {
        if (other == smartcity.SmartCity.DeviceInfo.getDefaultInstance()) return this;
        if (!other.getDeviceId().isEmpty()) {
          deviceId_ = other.deviceId_;
          bitField0_ |= 0x00000001;
          onChanged();
        }
        if (other.type_ != 0) {
          setTypeValue(other.getTypeValue());
        }
        if (!other.getIpAddress().isEmpty()) {
          ipAddress_ = other.ipAddress_;
          bitField0_ |= 0x00000004;
          onChanged();
        }
        if (other.getPort() != 0) {
          setPort(other.getPort());
        }
        if (other.initialState_ != 0) {
          setInitialStateValue(other.getInitialStateValue());
        }
        if (other.getIsActuator() != false) {
          setIsActuator(other.getIsActuator());
        }
        if (other.getIsSensor() != false) {
          setIsSensor(other.getIsSensor());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                deviceId_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000001;
                break;
              } // case 10
              case 16: {
                type_ = input.readEnum();
                bitField0_ |= 0x00000002;
                break;
              } // case 16
              case 26: {
                ipAddress_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000004;
                break;
              } // case 26
              case 32: {
                port_ = input.readInt32();
                bitField0_ |= 0x00000008;
                break;
              } // case 32
              case 40: {
                initialState_ = input.readEnum();
                bitField0_ |= 0x00000010;
                break;
              } // case 40
              case 48: {
                isActuator_ = input.readBool();
                bitField0_ |= 0x00000020;
                break;
              } // case 48
              case 56: {
                isSensor_ = input.readBool();
                bitField0_ |= 0x00000040;
                break;
              } // case 56
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private java.lang.Object deviceId_ = "";
      /**
       * <pre>
       * ID único para o dispositivo (e.g., "camera_001")
       * </pre>
       *
       * <code>string device_id = 1;</code>
       * @return The deviceId.
       */
      public java.lang.String getDeviceId() {
        java.lang.Object ref = deviceId_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          deviceId_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * ID único para o dispositivo (e.g., "camera_001")
       * </pre>
       *
       * <code>string device_id = 1;</code>
       * @return The bytes for deviceId.
       */
      public com.google.protobuf.ByteString
          getDeviceIdBytes() {
        java.lang.Object ref = deviceId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          deviceId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * ID único para o dispositivo (e.g., "camera_001")
       * </pre>
       *
       * <code>string device_id = 1;</code>
       * @param value The deviceId to set.
       * @return This builder for chaining.
       */
      public Builder setDeviceId(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        deviceId_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * ID único para o dispositivo (e.g., "camera_001")
       * </pre>
       *
       * <code>string device_id = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearDeviceId() {
        deviceId_ = getDefaultInstance().getDeviceId();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * ID único para o dispositivo (e.g., "camera_001")
       * </pre>
       *
       * <code>string device_id = 1;</code>
       * @param value The bytes for deviceId to set.
       * @return This builder for chaining.
       */
      public Builder setDeviceIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        deviceId_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }

      private int type_ = 0;
      /**
       * <pre>
       * Tipo do dispositivo (e.g., CAMERA, POST) 
       * </pre>
       *
       * <code>.smartcity.DeviceType type = 2;</code>
       * @return The enum numeric value on the wire for type.
       */
      @java.lang.Override public int getTypeValue() {
        return type_;
      }
      /**
       * <pre>
       * Tipo do dispositivo (e.g., CAMERA, POST) 
       * </pre>
       *
       * <code>.smartcity.DeviceType type = 2;</code>
       * @param value The enum numeric value on the wire for type to set.
       * @return This builder for chaining.
       */
      public Builder setTypeValue(int value) {
        type_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Tipo do dispositivo (e.g., CAMERA, POST) 
       * </pre>
       *
       * <code>.smartcity.DeviceType type = 2;</code>
       * @return The type.
       */
      @java.lang.Override
      public smartcity.SmartCity.DeviceType getType() {
        smartcity.SmartCity.DeviceType result = smartcity.SmartCity.DeviceType.forNumber(type_);
        return result == null ? smartcity.SmartCity.DeviceType.UNRECOGNIZED : result;
      }
      /**
       * <pre>
       * Tipo do dispositivo (e.g., CAMERA, POST) 
       * </pre>
       *
       * <code>.smartcity.DeviceType type = 2;</code>
       * @param value The type to set.
       * @return This builder for chaining.
       */
      public Builder setType(smartcity.SmartCity.DeviceType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000002;
        type_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Tipo do dispositivo (e.g., CAMERA, POST) 
       * </pre>
       *
       * <code>.smartcity.DeviceType type = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearType() {
        bitField0_ = (bitField0_ & ~0x00000002);
        type_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object ipAddress_ = "";
      /**
       * <pre>
       * Endereço IP do dispositivo 
       * </pre>
       *
       * <code>string ip_address = 3;</code>
       * @return The ipAddress.
       */
      public java.lang.String getIpAddress() {
        java.lang.Object ref = ipAddress_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          ipAddress_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Endereço IP do dispositivo 
       * </pre>
       *
       * <code>string ip_address = 3;</code>
       * @return The bytes for ipAddress.
       */
      public com.google.protobuf.ByteString
          getIpAddressBytes() {
        java.lang.Object ref = ipAddress_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          ipAddress_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Endereço IP do dispositivo 
       * </pre>
       *
       * <code>string ip_address = 3;</code>
       * @param value The ipAddress to set.
       * @return This builder for chaining.
       */
      public Builder setIpAddress(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        ipAddress_ = value;
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Endereço IP do dispositivo 
       * </pre>
       *
       * <code>string ip_address = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearIpAddress() {
        ipAddress_ = getDefaultInstance().getIpAddress();
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Endereço IP do dispositivo 
       * </pre>
       *
       * <code>string ip_address = 3;</code>
       * @param value The bytes for ipAddress to set.
       * @return This builder for chaining.
       */
      public Builder setIpAddressBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        ipAddress_ = value;
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }

      private int port_ ;
      /**
       * <pre>
       * Porta TCP do dispositivo para controle 
       * </pre>
       *
       * <code>int32 port = 4;</code>
       * @return The port.
       */
      @java.lang.Override
      public int getPort() {
        return port_;
      }
      /**
       * <pre>
       * Porta TCP do dispositivo para controle 
       * </pre>
       *
       * <code>int32 port = 4;</code>
       * @param value The port to set.
       * @return This builder for chaining.
       */
      public Builder setPort(int value) {

        port_ = value;
        bitField0_ |= 0x00000008;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Porta TCP do dispositivo para controle 
       * </pre>
       *
       * <code>int32 port = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearPort() {
        bitField0_ = (bitField0_ & ~0x00000008);
        port_ = 0;
        onChanged();
        return this;
      }

      private int initialState_ = 0;
      /**
       * <pre>
       * Estado inicial do dispositivo (e.g., ON, OFF) 
       * </pre>
       *
       * <code>.smartcity.DeviceStatus initial_state = 5;</code>
       * @return The enum numeric value on the wire for initialState.
       */
      @java.lang.Override public int getInitialStateValue() {
        return initialState_;
      }
      /**
       * <pre>
       * Estado inicial do dispositivo (e.g., ON, OFF) 
       * </pre>
       *
       * <code>.smartcity.DeviceStatus initial_state = 5;</code>
       * @param value The enum numeric value on the wire for initialState to set.
       * @return This builder for chaining.
       */
      public Builder setInitialStateValue(int value) {
        initialState_ = value;
        bitField0_ |= 0x00000010;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Estado inicial do dispositivo (e.g., ON, OFF) 
       * </pre>
       *
       * <code>.smartcity.DeviceStatus initial_state = 5;</code>
       * @return The initialState.
       */
      @java.lang.Override
      public smartcity.SmartCity.DeviceStatus getInitialState() {
        smartcity.SmartCity.DeviceStatus result = smartcity.SmartCity.DeviceStatus.forNumber(initialState_);
        return result == null ? smartcity.SmartCity.DeviceStatus.UNRECOGNIZED : result;
      }
      /**
       * <pre>
       * Estado inicial do dispositivo (e.g., ON, OFF) 
       * </pre>
       *
       * <code>.smartcity.DeviceStatus initial_state = 5;</code>
       * @param value The initialState to set.
       * @return This builder for chaining.
       */
      public Builder setInitialState(smartcity.SmartCity.DeviceStatus value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000010;
        initialState_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Estado inicial do dispositivo (e.g., ON, OFF) 
       * </pre>
       *
       * <code>.smartcity.DeviceStatus initial_state = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearInitialState() {
        bitField0_ = (bitField0_ & ~0x00000010);
        initialState_ = 0;
        onChanged();
        return this;
      }

      private boolean isActuator_ ;
      /**
       * <pre>
       * Verdadeiro se o dispositivo pode receber comandos para modificar seu estado 
       * </pre>
       *
       * <code>bool is_actuator = 6;</code>
       * @return The isActuator.
       */
      @java.lang.Override
      public boolean getIsActuator() {
        return isActuator_;
      }
      /**
       * <pre>
       * Verdadeiro se o dispositivo pode receber comandos para modificar seu estado 
       * </pre>
       *
       * <code>bool is_actuator = 6;</code>
       * @param value The isActuator to set.
       * @return This builder for chaining.
       */
      public Builder setIsActuator(boolean value) {

        isActuator_ = value;
        bitField0_ |= 0x00000020;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Verdadeiro se o dispositivo pode receber comandos para modificar seu estado 
       * </pre>
       *
       * <code>bool is_actuator = 6;</code>
       * @return This builder for chaining.
       */
      public Builder clearIsActuator() {
        bitField0_ = (bitField0_ & ~0x00000020);
        isActuator_ = false;
        onChanged();
        return this;
      }

      private boolean isSensor_ ;
      /**
       * <pre>
       * Verdadeiro se o dispositivo é um sensor que envia dados 
       * </pre>
       *
       * <code>bool is_sensor = 7;</code>
       * @return The isSensor.
       */
      @java.lang.Override
      public boolean getIsSensor() {
        return isSensor_;
      }
      /**
       * <pre>
       * Verdadeiro se o dispositivo é um sensor que envia dados 
       * </pre>
       *
       * <code>bool is_sensor = 7;</code>
       * @param value The isSensor to set.
       * @return This builder for chaining.
       */
      public Builder setIsSensor(boolean value) {

        isSensor_ = value;
        bitField0_ |= 0x00000040;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Verdadeiro se o dispositivo é um sensor que envia dados 
       * </pre>
       *
       * <code>bool is_sensor = 7;</code>
       * @return This builder for chaining.
       */
      public Builder clearIsSensor() {
        bitField0_ = (bitField0_ & ~0x00000040);
        isSensor_ = false;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:smartcity.DeviceInfo)
    }

    // @@protoc_insertion_point(class_scope:smartcity.DeviceInfo)
    private static final smartcity.SmartCity.DeviceInfo DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new smartcity.SmartCity.DeviceInfo();
    }

    public static smartcity.SmartCity.DeviceInfo getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<DeviceInfo>
        PARSER = new com.google.protobuf.AbstractParser<DeviceInfo>() {
      @java.lang.Override
      public DeviceInfo parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<DeviceInfo> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<DeviceInfo> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public smartcity.SmartCity.DeviceInfo getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface DeviceUpdateOrBuilder extends
      // @@protoc_insertion_point(interface_extends:smartcity.DeviceUpdate)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * ID do dispositivo
     * </pre>
     *
     * <code>string device_id = 1;</code>
     * @return The deviceId.
     */
    java.lang.String getDeviceId();
    /**
     * <pre>
     * ID do dispositivo
     * </pre>
     *
     * <code>string device_id = 1;</code>
     * @return The bytes for deviceId.
     */
    com.google.protobuf.ByteString
        getDeviceIdBytes();

    /**
     * <pre>
     * Tipo do dispositivo
     * </pre>
     *
     * <code>.smartcity.DeviceType type = 2;</code>
     * @return The enum numeric value on the wire for type.
     */
    int getTypeValue();
    /**
     * <pre>
     * Tipo do dispositivo
     * </pre>
     *
     * <code>.smartcity.DeviceType type = 2;</code>
     * @return The type.
     */
    smartcity.SmartCity.DeviceType getType();

    /**
     * <pre>
     * Para atuadores (e.g., ON/OFF para poste, RED/GREEN para semáforo) 
     * </pre>
     *
     * <code>.smartcity.DeviceStatus current_status = 3;</code>
     * @return The enum numeric value on the wire for currentStatus.
     */
    int getCurrentStatusValue();
    /**
     * <pre>
     * Para atuadores (e.g., ON/OFF para poste, RED/GREEN para semáforo) 
     * </pre>
     *
     * <code>.smartcity.DeviceStatus current_status = 3;</code>
     * @return The currentStatus.
     */
    smartcity.SmartCity.DeviceStatus getCurrentStatus();

    /**
     * <pre>
     * Opcional: Leituras de sensor específicas (apenas para sensores)
     * </pre>
     *
     * <code>double temperature_value = 4;</code>
     * @return The temperatureValue.
     */
    double getTemperatureValue();

    /**
     * <pre>
     * Para AIR_QUALITY_SENSOR
     * </pre>
     *
     * <code>double air_quality_index = 5;</code>
     * @return The airQualityIndex.
     */
    double getAirQualityIndex();

    /**
     * <pre>
     * Adicionar outros dados de sensor específicos conforme necessário (e.g., camera_resolution, traffic_light_timer)
     * </pre>
     *
     * <code>string custom_config_status = 6;</code>
     * @return The customConfigStatus.
     */
    java.lang.String getCustomConfigStatus();
    /**
     * <pre>
     * Adicionar outros dados de sensor específicos conforme necessário (e.g., camera_resolution, traffic_light_timer)
     * </pre>
     *
     * <code>string custom_config_status = 6;</code>
     * @return The bytes for customConfigStatus.
     */
    com.google.protobuf.ByteString
        getCustomConfigStatusBytes();
  }
  /**
   * <pre>
   * Mensagem para atualizações de estado do dispositivo ou leituras de sensor periódicas 
   * </pre>
   *
   * Protobuf type {@code smartcity.DeviceUpdate}
   */
  public static final class DeviceUpdate extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:smartcity.DeviceUpdate)
      DeviceUpdateOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use DeviceUpdate.newBuilder() to construct.
    private DeviceUpdate(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private DeviceUpdate() {
      deviceId_ = "";
      type_ = 0;
      currentStatus_ = 0;
      customConfigStatus_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new DeviceUpdate();
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return smartcity.SmartCity.internal_static_smartcity_DeviceUpdate_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return smartcity.SmartCity.internal_static_smartcity_DeviceUpdate_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              smartcity.SmartCity.DeviceUpdate.class, smartcity.SmartCity.DeviceUpdate.Builder.class);
    }

    public static final int DEVICE_ID_FIELD_NUMBER = 1;
    @SuppressWarnings("serial")
    private volatile java.lang.Object deviceId_ = "";
    /**
     * <pre>
     * ID do dispositivo
     * </pre>
     *
     * <code>string device_id = 1;</code>
     * @return The deviceId.
     */
    @java.lang.Override
    public java.lang.String getDeviceId() {
      java.lang.Object ref = deviceId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        deviceId_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * ID do dispositivo
     * </pre>
     *
     * <code>string device_id = 1;</code>
     * @return The bytes for deviceId.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getDeviceIdBytes() {
      java.lang.Object ref = deviceId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        deviceId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int TYPE_FIELD_NUMBER = 2;
    private int type_ = 0;
    /**
     * <pre>
     * Tipo do dispositivo
     * </pre>
     *
     * <code>.smartcity.DeviceType type = 2;</code>
     * @return The enum numeric value on the wire for type.
     */
    @java.lang.Override public int getTypeValue() {
      return type_;
    }
    /**
     * <pre>
     * Tipo do dispositivo
     * </pre>
     *
     * <code>.smartcity.DeviceType type = 2;</code>
     * @return The type.
     */
    @java.lang.Override public smartcity.SmartCity.DeviceType getType() {
      smartcity.SmartCity.DeviceType result = smartcity.SmartCity.DeviceType.forNumber(type_);
      return result == null ? smartcity.SmartCity.DeviceType.UNRECOGNIZED : result;
    }

    public static final int CURRENT_STATUS_FIELD_NUMBER = 3;
    private int currentStatus_ = 0;
    /**
     * <pre>
     * Para atuadores (e.g., ON/OFF para poste, RED/GREEN para semáforo) 
     * </pre>
     *
     * <code>.smartcity.DeviceStatus current_status = 3;</code>
     * @return The enum numeric value on the wire for currentStatus.
     */
    @java.lang.Override public int getCurrentStatusValue() {
      return currentStatus_;
    }
    /**
     * <pre>
     * Para atuadores (e.g., ON/OFF para poste, RED/GREEN para semáforo) 
     * </pre>
     *
     * <code>.smartcity.DeviceStatus current_status = 3;</code>
     * @return The currentStatus.
     */
    @java.lang.Override public smartcity.SmartCity.DeviceStatus getCurrentStatus() {
      smartcity.SmartCity.DeviceStatus result = smartcity.SmartCity.DeviceStatus.forNumber(currentStatus_);
      return result == null ? smartcity.SmartCity.DeviceStatus.UNRECOGNIZED : result;
    }

    public static final int TEMPERATURE_VALUE_FIELD_NUMBER = 4;
    private double temperatureValue_ = 0D;
    /**
     * <pre>
     * Opcional: Leituras de sensor específicas (apenas para sensores)
     * </pre>
     *
     * <code>double temperature_value = 4;</code>
     * @return The temperatureValue.
     */
    @java.lang.Override
    public double getTemperatureValue() {
      return temperatureValue_;
    }

    public static final int AIR_QUALITY_INDEX_FIELD_NUMBER = 5;
    private double airQualityIndex_ = 0D;
    /**
     * <pre>
     * Para AIR_QUALITY_SENSOR
     * </pre>
     *
     * <code>double air_quality_index = 5;</code>
     * @return The airQualityIndex.
     */
    @java.lang.Override
    public double getAirQualityIndex() {
      return airQualityIndex_;
    }

    public static final int CUSTOM_CONFIG_STATUS_FIELD_NUMBER = 6;
    @SuppressWarnings("serial")
    private volatile java.lang.Object customConfigStatus_ = "";
    /**
     * <pre>
     * Adicionar outros dados de sensor específicos conforme necessário (e.g., camera_resolution, traffic_light_timer)
     * </pre>
     *
     * <code>string custom_config_status = 6;</code>
     * @return The customConfigStatus.
     */
    @java.lang.Override
    public java.lang.String getCustomConfigStatus() {
      java.lang.Object ref = customConfigStatus_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        customConfigStatus_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * Adicionar outros dados de sensor específicos conforme necessário (e.g., camera_resolution, traffic_light_timer)
     * </pre>
     *
     * <code>string custom_config_status = 6;</code>
     * @return The bytes for customConfigStatus.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getCustomConfigStatusBytes() {
      java.lang.Object ref = customConfigStatus_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        customConfigStatus_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(deviceId_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, deviceId_);
      }
      if (type_ != smartcity.SmartCity.DeviceType.UNKNOWN_DEVICE.getNumber()) {
        output.writeEnum(2, type_);
      }
      if (currentStatus_ != smartcity.SmartCity.DeviceStatus.UNKNOWN_STATUS.getNumber()) {
        output.writeEnum(3, currentStatus_);
      }
      if (java.lang.Double.doubleToRawLongBits(temperatureValue_) != 0) {
        output.writeDouble(4, temperatureValue_);
      }
      if (java.lang.Double.doubleToRawLongBits(airQualityIndex_) != 0) {
        output.writeDouble(5, airQualityIndex_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(customConfigStatus_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 6, customConfigStatus_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(deviceId_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, deviceId_);
      }
      if (type_ != smartcity.SmartCity.DeviceType.UNKNOWN_DEVICE.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(2, type_);
      }
      if (currentStatus_ != smartcity.SmartCity.DeviceStatus.UNKNOWN_STATUS.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(3, currentStatus_);
      }
      if (java.lang.Double.doubleToRawLongBits(temperatureValue_) != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(4, temperatureValue_);
      }
      if (java.lang.Double.doubleToRawLongBits(airQualityIndex_) != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(5, airQualityIndex_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(customConfigStatus_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(6, customConfigStatus_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof smartcity.SmartCity.DeviceUpdate)) {
        return super.equals(obj);
      }
      smartcity.SmartCity.DeviceUpdate other = (smartcity.SmartCity.DeviceUpdate) obj;

      if (!getDeviceId()
          .equals(other.getDeviceId())) return false;
      if (type_ != other.type_) return false;
      if (currentStatus_ != other.currentStatus_) return false;
      if (java.lang.Double.doubleToLongBits(getTemperatureValue())
          != java.lang.Double.doubleToLongBits(
              other.getTemperatureValue())) return false;
      if (java.lang.Double.doubleToLongBits(getAirQualityIndex())
          != java.lang.Double.doubleToLongBits(
              other.getAirQualityIndex())) return false;
      if (!getCustomConfigStatus()
          .equals(other.getCustomConfigStatus())) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + DEVICE_ID_FIELD_NUMBER;
      hash = (53 * hash) + getDeviceId().hashCode();
      hash = (37 * hash) + TYPE_FIELD_NUMBER;
      hash = (53 * hash) + type_;
      hash = (37 * hash) + CURRENT_STATUS_FIELD_NUMBER;
      hash = (53 * hash) + currentStatus_;
      hash = (37 * hash) + TEMPERATURE_VALUE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getTemperatureValue()));
      hash = (37 * hash) + AIR_QUALITY_INDEX_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getAirQualityIndex()));
      hash = (37 * hash) + CUSTOM_CONFIG_STATUS_FIELD_NUMBER;
      hash = (53 * hash) + getCustomConfigStatus().hashCode();
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static smartcity.SmartCity.DeviceUpdate parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static smartcity.SmartCity.DeviceUpdate parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static smartcity.SmartCity.DeviceUpdate parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static smartcity.SmartCity.DeviceUpdate parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static smartcity.SmartCity.DeviceUpdate parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static smartcity.SmartCity.DeviceUpdate parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static smartcity.SmartCity.DeviceUpdate parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static smartcity.SmartCity.DeviceUpdate parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static smartcity.SmartCity.DeviceUpdate parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static smartcity.SmartCity.DeviceUpdate parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static smartcity.SmartCity.DeviceUpdate parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static smartcity.SmartCity.DeviceUpdate parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(smartcity.SmartCity.DeviceUpdate prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Mensagem para atualizações de estado do dispositivo ou leituras de sensor periódicas 
     * </pre>
     *
     * Protobuf type {@code smartcity.DeviceUpdate}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:smartcity.DeviceUpdate)
        smartcity.SmartCity.DeviceUpdateOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return smartcity.SmartCity.internal_static_smartcity_DeviceUpdate_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return smartcity.SmartCity.internal_static_smartcity_DeviceUpdate_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                smartcity.SmartCity.DeviceUpdate.class, smartcity.SmartCity.DeviceUpdate.Builder.class);
      }

      // Construct using smartcity.SmartCity.DeviceUpdate.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        deviceId_ = "";
        type_ = 0;
        currentStatus_ = 0;
        temperatureValue_ = 0D;
        airQualityIndex_ = 0D;
        customConfigStatus_ = "";
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return smartcity.SmartCity.internal_static_smartcity_DeviceUpdate_descriptor;
      }

      @java.lang.Override
      public smartcity.SmartCity.DeviceUpdate getDefaultInstanceForType() {
        return smartcity.SmartCity.DeviceUpdate.getDefaultInstance();
      }

      @java.lang.Override
      public smartcity.SmartCity.DeviceUpdate build() {
        smartcity.SmartCity.DeviceUpdate result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public smartcity.SmartCity.DeviceUpdate buildPartial() {
        smartcity.SmartCity.DeviceUpdate result = new smartcity.SmartCity.DeviceUpdate(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(smartcity.SmartCity.DeviceUpdate result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.deviceId_ = deviceId_;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.type_ = type_;
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.currentStatus_ = currentStatus_;
        }
        if (((from_bitField0_ & 0x00000008) != 0)) {
          result.temperatureValue_ = temperatureValue_;
        }
        if (((from_bitField0_ & 0x00000010) != 0)) {
          result.airQualityIndex_ = airQualityIndex_;
        }
        if (((from_bitField0_ & 0x00000020) != 0)) {
          result.customConfigStatus_ = customConfigStatus_;
        }
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof smartcity.SmartCity.DeviceUpdate) {
          return mergeFrom((smartcity.SmartCity.DeviceUpdate)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(smartcity.SmartCity.DeviceUpdate other) {
        if (other == smartcity.SmartCity.DeviceUpdate.getDefaultInstance()) return this;
        if (!other.getDeviceId().isEmpty()) {
          deviceId_ = other.deviceId_;
          bitField0_ |= 0x00000001;
          onChanged();
        }
        if (other.type_ != 0) {
          setTypeValue(other.getTypeValue());
        }
        if (other.currentStatus_ != 0) {
          setCurrentStatusValue(other.getCurrentStatusValue());
        }
        if (other.getTemperatureValue() != 0D) {
          setTemperatureValue(other.getTemperatureValue());
        }
        if (other.getAirQualityIndex() != 0D) {
          setAirQualityIndex(other.getAirQualityIndex());
        }
        if (!other.getCustomConfigStatus().isEmpty()) {
          customConfigStatus_ = other.customConfigStatus_;
          bitField0_ |= 0x00000020;
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                deviceId_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000001;
                break;
              } // case 10
              case 16: {
                type_ = input.readEnum();
                bitField0_ |= 0x00000002;
                break;
              } // case 16
              case 24: {
                currentStatus_ = input.readEnum();
                bitField0_ |= 0x00000004;
                break;
              } // case 24
              case 33: {
                temperatureValue_ = input.readDouble();
                bitField0_ |= 0x00000008;
                break;
              } // case 33
              case 41: {
                airQualityIndex_ = input.readDouble();
                bitField0_ |= 0x00000010;
                break;
              } // case 41
              case 50: {
                customConfigStatus_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000020;
                break;
              } // case 50
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private java.lang.Object deviceId_ = "";
      /**
       * <pre>
       * ID do dispositivo
       * </pre>
       *
       * <code>string device_id = 1;</code>
       * @return The deviceId.
       */
      public java.lang.String getDeviceId() {
        java.lang.Object ref = deviceId_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          deviceId_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * ID do dispositivo
       * </pre>
       *
       * <code>string device_id = 1;</code>
       * @return The bytes for deviceId.
       */
      public com.google.protobuf.ByteString
          getDeviceIdBytes() {
        java.lang.Object ref = deviceId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          deviceId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * ID do dispositivo
       * </pre>
       *
       * <code>string device_id = 1;</code>
       * @param value The deviceId to set.
       * @return This builder for chaining.
       */
      public Builder setDeviceId(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        deviceId_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * ID do dispositivo
       * </pre>
       *
       * <code>string device_id = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearDeviceId() {
        deviceId_ = getDefaultInstance().getDeviceId();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * ID do dispositivo
       * </pre>
       *
       * <code>string device_id = 1;</code>
       * @param value The bytes for deviceId to set.
       * @return This builder for chaining.
       */
      public Builder setDeviceIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        deviceId_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }

      private int type_ = 0;
      /**
       * <pre>
       * Tipo do dispositivo
       * </pre>
       *
       * <code>.smartcity.DeviceType type = 2;</code>
       * @return The enum numeric value on the wire for type.
       */
      @java.lang.Override public int getTypeValue() {
        return type_;
      }
      /**
       * <pre>
       * Tipo do dispositivo
       * </pre>
       *
       * <code>.smartcity.DeviceType type = 2;</code>
       * @param value The enum numeric value on the wire for type to set.
       * @return This builder for chaining.
       */
      public Builder setTypeValue(int value) {
        type_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Tipo do dispositivo
       * </pre>
       *
       * <code>.smartcity.DeviceType type = 2;</code>
       * @return The type.
       */
      @java.lang.Override
      public smartcity.SmartCity.DeviceType getType() {
        smartcity.SmartCity.DeviceType result = smartcity.SmartCity.DeviceType.forNumber(type_);
        return result == null ? smartcity.SmartCity.DeviceType.UNRECOGNIZED : result;
      }
      /**
       * <pre>
       * Tipo do dispositivo
       * </pre>
       *
       * <code>.smartcity.DeviceType type = 2;</code>
       * @param value The type to set.
       * @return This builder for chaining.
       */
      public Builder setType(smartcity.SmartCity.DeviceType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000002;
        type_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Tipo do dispositivo
       * </pre>
       *
       * <code>.smartcity.DeviceType type = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearType() {
        bitField0_ = (bitField0_ & ~0x00000002);
        type_ = 0;
        onChanged();
        return this;
      }

      private int currentStatus_ = 0;
      /**
       * <pre>
       * Para atuadores (e.g., ON/OFF para poste, RED/GREEN para semáforo) 
       * </pre>
       *
       * <code>.smartcity.DeviceStatus current_status = 3;</code>
       * @return The enum numeric value on the wire for currentStatus.
       */
      @java.lang.Override public int getCurrentStatusValue() {
        return currentStatus_;
      }
      /**
       * <pre>
       * Para atuadores (e.g., ON/OFF para poste, RED/GREEN para semáforo) 
       * </pre>
       *
       * <code>.smartcity.DeviceStatus current_status = 3;</code>
       * @param value The enum numeric value on the wire for currentStatus to set.
       * @return This builder for chaining.
       */
      public Builder setCurrentStatusValue(int value) {
        currentStatus_ = value;
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Para atuadores (e.g., ON/OFF para poste, RED/GREEN para semáforo) 
       * </pre>
       *
       * <code>.smartcity.DeviceStatus current_status = 3;</code>
       * @return The currentStatus.
       */
      @java.lang.Override
      public smartcity.SmartCity.DeviceStatus getCurrentStatus() {
        smartcity.SmartCity.DeviceStatus result = smartcity.SmartCity.DeviceStatus.forNumber(currentStatus_);
        return result == null ? smartcity.SmartCity.DeviceStatus.UNRECOGNIZED : result;
      }
      /**
       * <pre>
       * Para atuadores (e.g., ON/OFF para poste, RED/GREEN para semáforo) 
       * </pre>
       *
       * <code>.smartcity.DeviceStatus current_status = 3;</code>
       * @param value The currentStatus to set.
       * @return This builder for chaining.
       */
      public Builder setCurrentStatus(smartcity.SmartCity.DeviceStatus value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000004;
        currentStatus_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Para atuadores (e.g., ON/OFF para poste, RED/GREEN para semáforo) 
       * </pre>
       *
       * <code>.smartcity.DeviceStatus current_status = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearCurrentStatus() {
        bitField0_ = (bitField0_ & ~0x00000004);
        currentStatus_ = 0;
        onChanged();
        return this;
      }

      private double temperatureValue_ ;
      /**
       * <pre>
       * Opcional: Leituras de sensor específicas (apenas para sensores)
       * </pre>
       *
       * <code>double temperature_value = 4;</code>
       * @return The temperatureValue.
       */
      @java.lang.Override
      public double getTemperatureValue() {
        return temperatureValue_;
      }
      /**
       * <pre>
       * Opcional: Leituras de sensor específicas (apenas para sensores)
       * </pre>
       *
       * <code>double temperature_value = 4;</code>
       * @param value The temperatureValue to set.
       * @return This builder for chaining.
       */
      public Builder setTemperatureValue(double value) {

        temperatureValue_ = value;
        bitField0_ |= 0x00000008;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Opcional: Leituras de sensor específicas (apenas para sensores)
       * </pre>
       *
       * <code>double temperature_value = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearTemperatureValue() {
        bitField0_ = (bitField0_ & ~0x00000008);
        temperatureValue_ = 0D;
        onChanged();
        return this;
      }

      private double airQualityIndex_ ;
      /**
       * <pre>
       * Para AIR_QUALITY_SENSOR
       * </pre>
       *
       * <code>double air_quality_index = 5;</code>
       * @return The airQualityIndex.
       */
      @java.lang.Override
      public double getAirQualityIndex() {
        return airQualityIndex_;
      }
      /**
       * <pre>
       * Para AIR_QUALITY_SENSOR
       * </pre>
       *
       * <code>double air_quality_index = 5;</code>
       * @param value The airQualityIndex to set.
       * @return This builder for chaining.
       */
      public Builder setAirQualityIndex(double value) {

        airQualityIndex_ = value;
        bitField0_ |= 0x00000010;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Para AIR_QUALITY_SENSOR
       * </pre>
       *
       * <code>double air_quality_index = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearAirQualityIndex() {
        bitField0_ = (bitField0_ & ~0x00000010);
        airQualityIndex_ = 0D;
        onChanged();
        return this;
      }

      private java.lang.Object customConfigStatus_ = "";
      /**
       * <pre>
       * Adicionar outros dados de sensor específicos conforme necessário (e.g., camera_resolution, traffic_light_timer)
       * </pre>
       *
       * <code>string custom_config_status = 6;</code>
       * @return The customConfigStatus.
       */
      public java.lang.String getCustomConfigStatus() {
        java.lang.Object ref = customConfigStatus_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          customConfigStatus_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Adicionar outros dados de sensor específicos conforme necessário (e.g., camera_resolution, traffic_light_timer)
       * </pre>
       *
       * <code>string custom_config_status = 6;</code>
       * @return The bytes for customConfigStatus.
       */
      public com.google.protobuf.ByteString
          getCustomConfigStatusBytes() {
        java.lang.Object ref = customConfigStatus_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          customConfigStatus_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Adicionar outros dados de sensor específicos conforme necessário (e.g., camera_resolution, traffic_light_timer)
       * </pre>
       *
       * <code>string custom_config_status = 6;</code>
       * @param value The customConfigStatus to set.
       * @return This builder for chaining.
       */
      public Builder setCustomConfigStatus(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        customConfigStatus_ = value;
        bitField0_ |= 0x00000020;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Adicionar outros dados de sensor específicos conforme necessário (e.g., camera_resolution, traffic_light_timer)
       * </pre>
       *
       * <code>string custom_config_status = 6;</code>
       * @return This builder for chaining.
       */
      public Builder clearCustomConfigStatus() {
        customConfigStatus_ = getDefaultInstance().getCustomConfigStatus();
        bitField0_ = (bitField0_ & ~0x00000020);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Adicionar outros dados de sensor específicos conforme necessário (e.g., camera_resolution, traffic_light_timer)
       * </pre>
       *
       * <code>string custom_config_status = 6;</code>
       * @param value The bytes for customConfigStatus to set.
       * @return This builder for chaining.
       */
      public Builder setCustomConfigStatusBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        customConfigStatus_ = value;
        bitField0_ |= 0x00000020;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:smartcity.DeviceUpdate)
    }

    // @@protoc_insertion_point(class_scope:smartcity.DeviceUpdate)
    private static final smartcity.SmartCity.DeviceUpdate DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new smartcity.SmartCity.DeviceUpdate();
    }

    public static smartcity.SmartCity.DeviceUpdate getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<DeviceUpdate>
        PARSER = new com.google.protobuf.AbstractParser<DeviceUpdate>() {
      @java.lang.Override
      public DeviceUpdate parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<DeviceUpdate> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<DeviceUpdate> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public smartcity.SmartCity.DeviceUpdate getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface DeviceCommandOrBuilder extends
      // @@protoc_insertion_point(interface_extends:smartcity.DeviceCommand)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * ID do dispositivo alvo
     * </pre>
     *
     * <code>string device_id = 1;</code>
     * @return The deviceId.
     */
    java.lang.String getDeviceId();
    /**
     * <pre>
     * ID do dispositivo alvo
     * </pre>
     *
     * <code>string device_id = 1;</code>
     * @return The bytes for deviceId.
     */
    com.google.protobuf.ByteString
        getDeviceIdBytes();

    /**
     * <pre>
     * Tipo do dispositivo alvo
     * </pre>
     *
     * <code>.smartcity.DeviceType type = 2;</code>
     * @return The enum numeric value on the wire for type.
     */
    int getTypeValue();
    /**
     * <pre>
     * Tipo do dispositivo alvo
     * </pre>
     *
     * <code>.smartcity.DeviceType type = 2;</code>
     * @return The type.
     */
    smartcity.SmartCity.DeviceType getType();

    /**
     * <pre>
     * Tipos de comando (e.g., "TURN_ON", "TURN_OFF", "SET_RESOLUTION", "SET_TRAFFIC_LIGHT_TIMER") 
     * </pre>
     *
     * <code>string command_type = 3;</code>
     * @return The commandType.
     */
    java.lang.String getCommandType();
    /**
     * <pre>
     * Tipos de comando (e.g., "TURN_ON", "TURN_OFF", "SET_RESOLUTION", "SET_TRAFFIC_LIGHT_TIMER") 
     * </pre>
     *
     * <code>string command_type = 3;</code>
     * @return The bytes for commandType.
     */
    com.google.protobuf.ByteString
        getCommandTypeBytes();

    /**
     * <pre>
     * Valores do comando (e.g., "ON", "OFF", "FullHD", "15s"). Pode ser uma string para acomodar vários tipos de valores. 
     * </pre>
     *
     * <code>string command_value = 4;</code>
     * @return The commandValue.
     */
    java.lang.String getCommandValue();
    /**
     * <pre>
     * Valores do comando (e.g., "ON", "OFF", "FullHD", "15s"). Pode ser uma string para acomodar vários tipos de valores. 
     * </pre>
     *
     * <code>string command_value = 4;</code>
     * @return The bytes for commandValue.
     */
    com.google.protobuf.ByteString
        getCommandValueBytes();
  }
  /**
   * <pre>
   * Mensagem para comandos enviados do Gateway para o Dispositivo (via TCP) 
   * </pre>
   *
   * Protobuf type {@code smartcity.DeviceCommand}
   */
  public static final class DeviceCommand extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:smartcity.DeviceCommand)
      DeviceCommandOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use DeviceCommand.newBuilder() to construct.
    private DeviceCommand(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private DeviceCommand() {
      deviceId_ = "";
      type_ = 0;
      commandType_ = "";
      commandValue_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new DeviceCommand();
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return smartcity.SmartCity.internal_static_smartcity_DeviceCommand_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return smartcity.SmartCity.internal_static_smartcity_DeviceCommand_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              smartcity.SmartCity.DeviceCommand.class, smartcity.SmartCity.DeviceCommand.Builder.class);
    }

    public static final int DEVICE_ID_FIELD_NUMBER = 1;
    @SuppressWarnings("serial")
    private volatile java.lang.Object deviceId_ = "";
    /**
     * <pre>
     * ID do dispositivo alvo
     * </pre>
     *
     * <code>string device_id = 1;</code>
     * @return The deviceId.
     */
    @java.lang.Override
    public java.lang.String getDeviceId() {
      java.lang.Object ref = deviceId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        deviceId_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * ID do dispositivo alvo
     * </pre>
     *
     * <code>string device_id = 1;</code>
     * @return The bytes for deviceId.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getDeviceIdBytes() {
      java.lang.Object ref = deviceId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        deviceId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int TYPE_FIELD_NUMBER = 2;
    private int type_ = 0;
    /**
     * <pre>
     * Tipo do dispositivo alvo
     * </pre>
     *
     * <code>.smartcity.DeviceType type = 2;</code>
     * @return The enum numeric value on the wire for type.
     */
    @java.lang.Override public int getTypeValue() {
      return type_;
    }
    /**
     * <pre>
     * Tipo do dispositivo alvo
     * </pre>
     *
     * <code>.smartcity.DeviceType type = 2;</code>
     * @return The type.
     */
    @java.lang.Override public smartcity.SmartCity.DeviceType getType() {
      smartcity.SmartCity.DeviceType result = smartcity.SmartCity.DeviceType.forNumber(type_);
      return result == null ? smartcity.SmartCity.DeviceType.UNRECOGNIZED : result;
    }

    public static final int COMMAND_TYPE_FIELD_NUMBER = 3;
    @SuppressWarnings("serial")
    private volatile java.lang.Object commandType_ = "";
    /**
     * <pre>
     * Tipos de comando (e.g., "TURN_ON", "TURN_OFF", "SET_RESOLUTION", "SET_TRAFFIC_LIGHT_TIMER") 
     * </pre>
     *
     * <code>string command_type = 3;</code>
     * @return The commandType.
     */
    @java.lang.Override
    public java.lang.String getCommandType() {
      java.lang.Object ref = commandType_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        commandType_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * Tipos de comando (e.g., "TURN_ON", "TURN_OFF", "SET_RESOLUTION", "SET_TRAFFIC_LIGHT_TIMER") 
     * </pre>
     *
     * <code>string command_type = 3;</code>
     * @return The bytes for commandType.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getCommandTypeBytes() {
      java.lang.Object ref = commandType_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        commandType_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int COMMAND_VALUE_FIELD_NUMBER = 4;
    @SuppressWarnings("serial")
    private volatile java.lang.Object commandValue_ = "";
    /**
     * <pre>
     * Valores do comando (e.g., "ON", "OFF", "FullHD", "15s"). Pode ser uma string para acomodar vários tipos de valores. 
     * </pre>
     *
     * <code>string command_value = 4;</code>
     * @return The commandValue.
     */
    @java.lang.Override
    public java.lang.String getCommandValue() {
      java.lang.Object ref = commandValue_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        commandValue_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * Valores do comando (e.g., "ON", "OFF", "FullHD", "15s"). Pode ser uma string para acomodar vários tipos de valores. 
     * </pre>
     *
     * <code>string command_value = 4;</code>
     * @return The bytes for commandValue.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getCommandValueBytes() {
      java.lang.Object ref = commandValue_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        commandValue_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(deviceId_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, deviceId_);
      }
      if (type_ != smartcity.SmartCity.DeviceType.UNKNOWN_DEVICE.getNumber()) {
        output.writeEnum(2, type_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(commandType_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, commandType_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(commandValue_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 4, commandValue_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(deviceId_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, deviceId_);
      }
      if (type_ != smartcity.SmartCity.DeviceType.UNKNOWN_DEVICE.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(2, type_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(commandType_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, commandType_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(commandValue_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(4, commandValue_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof smartcity.SmartCity.DeviceCommand)) {
        return super.equals(obj);
      }
      smartcity.SmartCity.DeviceCommand other = (smartcity.SmartCity.DeviceCommand) obj;

      if (!getDeviceId()
          .equals(other.getDeviceId())) return false;
      if (type_ != other.type_) return false;
      if (!getCommandType()
          .equals(other.getCommandType())) return false;
      if (!getCommandValue()
          .equals(other.getCommandValue())) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + DEVICE_ID_FIELD_NUMBER;
      hash = (53 * hash) + getDeviceId().hashCode();
      hash = (37 * hash) + TYPE_FIELD_NUMBER;
      hash = (53 * hash) + type_;
      hash = (37 * hash) + COMMAND_TYPE_FIELD_NUMBER;
      hash = (53 * hash) + getCommandType().hashCode();
      hash = (37 * hash) + COMMAND_VALUE_FIELD_NUMBER;
      hash = (53 * hash) + getCommandValue().hashCode();
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static smartcity.SmartCity.DeviceCommand parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static smartcity.SmartCity.DeviceCommand parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static smartcity.SmartCity.DeviceCommand parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static smartcity.SmartCity.DeviceCommand parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static smartcity.SmartCity.DeviceCommand parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static smartcity.SmartCity.DeviceCommand parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static smartcity.SmartCity.DeviceCommand parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static smartcity.SmartCity.DeviceCommand parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static smartcity.SmartCity.DeviceCommand parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static smartcity.SmartCity.DeviceCommand parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static smartcity.SmartCity.DeviceCommand parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static smartcity.SmartCity.DeviceCommand parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(smartcity.SmartCity.DeviceCommand prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Mensagem para comandos enviados do Gateway para o Dispositivo (via TCP) 
     * </pre>
     *
     * Protobuf type {@code smartcity.DeviceCommand}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:smartcity.DeviceCommand)
        smartcity.SmartCity.DeviceCommandOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return smartcity.SmartCity.internal_static_smartcity_DeviceCommand_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return smartcity.SmartCity.internal_static_smartcity_DeviceCommand_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                smartcity.SmartCity.DeviceCommand.class, smartcity.SmartCity.DeviceCommand.Builder.class);
      }

      // Construct using smartcity.SmartCity.DeviceCommand.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        deviceId_ = "";
        type_ = 0;
        commandType_ = "";
        commandValue_ = "";
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return smartcity.SmartCity.internal_static_smartcity_DeviceCommand_descriptor;
      }

      @java.lang.Override
      public smartcity.SmartCity.DeviceCommand getDefaultInstanceForType() {
        return smartcity.SmartCity.DeviceCommand.getDefaultInstance();
      }

      @java.lang.Override
      public smartcity.SmartCity.DeviceCommand build() {
        smartcity.SmartCity.DeviceCommand result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public smartcity.SmartCity.DeviceCommand buildPartial() {
        smartcity.SmartCity.DeviceCommand result = new smartcity.SmartCity.DeviceCommand(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(smartcity.SmartCity.DeviceCommand result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.deviceId_ = deviceId_;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.type_ = type_;
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.commandType_ = commandType_;
        }
        if (((from_bitField0_ & 0x00000008) != 0)) {
          result.commandValue_ = commandValue_;
        }
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof smartcity.SmartCity.DeviceCommand) {
          return mergeFrom((smartcity.SmartCity.DeviceCommand)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(smartcity.SmartCity.DeviceCommand other) {
        if (other == smartcity.SmartCity.DeviceCommand.getDefaultInstance()) return this;
        if (!other.getDeviceId().isEmpty()) {
          deviceId_ = other.deviceId_;
          bitField0_ |= 0x00000001;
          onChanged();
        }
        if (other.type_ != 0) {
          setTypeValue(other.getTypeValue());
        }
        if (!other.getCommandType().isEmpty()) {
          commandType_ = other.commandType_;
          bitField0_ |= 0x00000004;
          onChanged();
        }
        if (!other.getCommandValue().isEmpty()) {
          commandValue_ = other.commandValue_;
          bitField0_ |= 0x00000008;
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                deviceId_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000001;
                break;
              } // case 10
              case 16: {
                type_ = input.readEnum();
                bitField0_ |= 0x00000002;
                break;
              } // case 16
              case 26: {
                commandType_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000004;
                break;
              } // case 26
              case 34: {
                commandValue_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000008;
                break;
              } // case 34
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private java.lang.Object deviceId_ = "";
      /**
       * <pre>
       * ID do dispositivo alvo
       * </pre>
       *
       * <code>string device_id = 1;</code>
       * @return The deviceId.
       */
      public java.lang.String getDeviceId() {
        java.lang.Object ref = deviceId_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          deviceId_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * ID do dispositivo alvo
       * </pre>
       *
       * <code>string device_id = 1;</code>
       * @return The bytes for deviceId.
       */
      public com.google.protobuf.ByteString
          getDeviceIdBytes() {
        java.lang.Object ref = deviceId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          deviceId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * ID do dispositivo alvo
       * </pre>
       *
       * <code>string device_id = 1;</code>
       * @param value The deviceId to set.
       * @return This builder for chaining.
       */
      public Builder setDeviceId(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        deviceId_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * ID do dispositivo alvo
       * </pre>
       *
       * <code>string device_id = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearDeviceId() {
        deviceId_ = getDefaultInstance().getDeviceId();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * ID do dispositivo alvo
       * </pre>
       *
       * <code>string device_id = 1;</code>
       * @param value The bytes for deviceId to set.
       * @return This builder for chaining.
       */
      public Builder setDeviceIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        deviceId_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }

      private int type_ = 0;
      /**
       * <pre>
       * Tipo do dispositivo alvo
       * </pre>
       *
       * <code>.smartcity.DeviceType type = 2;</code>
       * @return The enum numeric value on the wire for type.
       */
      @java.lang.Override public int getTypeValue() {
        return type_;
      }
      /**
       * <pre>
       * Tipo do dispositivo alvo
       * </pre>
       *
       * <code>.smartcity.DeviceType type = 2;</code>
       * @param value The enum numeric value on the wire for type to set.
       * @return This builder for chaining.
       */
      public Builder setTypeValue(int value) {
        type_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Tipo do dispositivo alvo
       * </pre>
       *
       * <code>.smartcity.DeviceType type = 2;</code>
       * @return The type.
       */
      @java.lang.Override
      public smartcity.SmartCity.DeviceType getType() {
        smartcity.SmartCity.DeviceType result = smartcity.SmartCity.DeviceType.forNumber(type_);
        return result == null ? smartcity.SmartCity.DeviceType.UNRECOGNIZED : result;
      }
      /**
       * <pre>
       * Tipo do dispositivo alvo
       * </pre>
       *
       * <code>.smartcity.DeviceType type = 2;</code>
       * @param value The type to set.
       * @return This builder for chaining.
       */
      public Builder setType(smartcity.SmartCity.DeviceType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000002;
        type_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Tipo do dispositivo alvo
       * </pre>
       *
       * <code>.smartcity.DeviceType type = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearType() {
        bitField0_ = (bitField0_ & ~0x00000002);
        type_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object commandType_ = "";
      /**
       * <pre>
       * Tipos de comando (e.g., "TURN_ON", "TURN_OFF", "SET_RESOLUTION", "SET_TRAFFIC_LIGHT_TIMER") 
       * </pre>
       *
       * <code>string command_type = 3;</code>
       * @return The commandType.
       */
      public java.lang.String getCommandType() {
        java.lang.Object ref = commandType_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          commandType_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Tipos de comando (e.g., "TURN_ON", "TURN_OFF", "SET_RESOLUTION", "SET_TRAFFIC_LIGHT_TIMER") 
       * </pre>
       *
       * <code>string command_type = 3;</code>
       * @return The bytes for commandType.
       */
      public com.google.protobuf.ByteString
          getCommandTypeBytes() {
        java.lang.Object ref = commandType_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          commandType_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Tipos de comando (e.g., "TURN_ON", "TURN_OFF", "SET_RESOLUTION", "SET_TRAFFIC_LIGHT_TIMER") 
       * </pre>
       *
       * <code>string command_type = 3;</code>
       * @param value The commandType to set.
       * @return This builder for chaining.
       */
      public Builder setCommandType(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        commandType_ = value;
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Tipos de comando (e.g., "TURN_ON", "TURN_OFF", "SET_RESOLUTION", "SET_TRAFFIC_LIGHT_TIMER") 
       * </pre>
       *
       * <code>string command_type = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearCommandType() {
        commandType_ = getDefaultInstance().getCommandType();
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Tipos de comando (e.g., "TURN_ON", "TURN_OFF", "SET_RESOLUTION", "SET_TRAFFIC_LIGHT_TIMER") 
       * </pre>
       *
       * <code>string command_type = 3;</code>
       * @param value The bytes for commandType to set.
       * @return This builder for chaining.
       */
      public Builder setCommandTypeBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        commandType_ = value;
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }

      private java.lang.Object commandValue_ = "";
      /**
       * <pre>
       * Valores do comando (e.g., "ON", "OFF", "FullHD", "15s"). Pode ser uma string para acomodar vários tipos de valores. 
       * </pre>
       *
       * <code>string command_value = 4;</code>
       * @return The commandValue.
       */
      public java.lang.String getCommandValue() {
        java.lang.Object ref = commandValue_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          commandValue_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Valores do comando (e.g., "ON", "OFF", "FullHD", "15s"). Pode ser uma string para acomodar vários tipos de valores. 
       * </pre>
       *
       * <code>string command_value = 4;</code>
       * @return The bytes for commandValue.
       */
      public com.google.protobuf.ByteString
          getCommandValueBytes() {
        java.lang.Object ref = commandValue_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          commandValue_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Valores do comando (e.g., "ON", "OFF", "FullHD", "15s"). Pode ser uma string para acomodar vários tipos de valores. 
       * </pre>
       *
       * <code>string command_value = 4;</code>
       * @param value The commandValue to set.
       * @return This builder for chaining.
       */
      public Builder setCommandValue(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        commandValue_ = value;
        bitField0_ |= 0x00000008;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Valores do comando (e.g., "ON", "OFF", "FullHD", "15s"). Pode ser uma string para acomodar vários tipos de valores. 
       * </pre>
       *
       * <code>string command_value = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearCommandValue() {
        commandValue_ = getDefaultInstance().getCommandValue();
        bitField0_ = (bitField0_ & ~0x00000008);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Valores do comando (e.g., "ON", "OFF", "FullHD", "15s"). Pode ser uma string para acomodar vários tipos de valores. 
       * </pre>
       *
       * <code>string command_value = 4;</code>
       * @param value The bytes for commandValue to set.
       * @return This builder for chaining.
       */
      public Builder setCommandValueBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        commandValue_ = value;
        bitField0_ |= 0x00000008;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:smartcity.DeviceCommand)
    }

    // @@protoc_insertion_point(class_scope:smartcity.DeviceCommand)
    private static final smartcity.SmartCity.DeviceCommand DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new smartcity.SmartCity.DeviceCommand();
    }

    public static smartcity.SmartCity.DeviceCommand getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<DeviceCommand>
        PARSER = new com.google.protobuf.AbstractParser<DeviceCommand>() {
      @java.lang.Override
      public DeviceCommand parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<DeviceCommand> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<DeviceCommand> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public smartcity.SmartCity.DeviceCommand getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ClientRequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:smartcity.ClientRequest)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>.smartcity.ClientRequest.RequestType type = 1;</code>
     * @return The enum numeric value on the wire for type.
     */
    int getTypeValue();
    /**
     * <code>.smartcity.ClientRequest.RequestType type = 1;</code>
     * @return The type.
     */
    smartcity.SmartCity.ClientRequest.RequestType getType();

    /**
     * <pre>
     * Necessário para GET_DEVICE_STATUS e SEND_DEVICE_COMMAND
     * </pre>
     *
     * <code>string target_device_id = 2;</code>
     * @return The targetDeviceId.
     */
    java.lang.String getTargetDeviceId();
    /**
     * <pre>
     * Necessário para GET_DEVICE_STATUS e SEND_DEVICE_COMMAND
     * </pre>
     *
     * <code>string target_device_id = 2;</code>
     * @return The bytes for targetDeviceId.
     */
    com.google.protobuf.ByteString
        getTargetDeviceIdBytes();

    /**
     * <pre>
     * Necessário para SEND_DEVICE_COMMAND
     * </pre>
     *
     * <code>.smartcity.DeviceCommand command = 3;</code>
     * @return Whether the command field is set.
     */
    boolean hasCommand();
    /**
     * <pre>
     * Necessário para SEND_DEVICE_COMMAND
     * </pre>
     *
     * <code>.smartcity.DeviceCommand command = 3;</code>
     * @return The command.
     */
    smartcity.SmartCity.DeviceCommand getCommand();
    /**
     * <pre>
     * Necessário para SEND_DEVICE_COMMAND
     * </pre>
     *
     * <code>.smartcity.DeviceCommand command = 3;</code>
     */
    smartcity.SmartCity.DeviceCommandOrBuilder getCommandOrBuilder();
  }
  /**
   * <pre>
   * Requisições do Cliente para o Gateway 
   * </pre>
   *
   * Protobuf type {@code smartcity.ClientRequest}
   */
  public static final class ClientRequest extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:smartcity.ClientRequest)
      ClientRequestOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use ClientRequest.newBuilder() to construct.
    private ClientRequest(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ClientRequest() {
      type_ = 0;
      targetDeviceId_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new ClientRequest();
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return smartcity.SmartCity.internal_static_smartcity_ClientRequest_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return smartcity.SmartCity.internal_static_smartcity_ClientRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              smartcity.SmartCity.ClientRequest.class, smartcity.SmartCity.ClientRequest.Builder.class);
    }

    /**
     * Protobuf enum {@code smartcity.ClientRequest.RequestType}
     */
    public enum RequestType
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <pre>
       * Tipo de requisição desconhecido
       * </pre>
       *
       * <code>UNKNOWN_REQUEST = 0;</code>
       */
      UNKNOWN_REQUEST(0),
      /**
       * <pre>
       * Cliente requisita uma lista de dispositivos conectados 
       * </pre>
       *
       * <code>LIST_DEVICES = 1;</code>
       */
      LIST_DEVICES(1),
      /**
       * <pre>
       * Cliente requisita o status de um dispositivo específico 
       * </pre>
       *
       * <code>GET_DEVICE_STATUS = 2;</code>
       */
      GET_DEVICE_STATUS(2),
      /**
       * <pre>
       * Cliente envia um comando para um dispositivo específico 
       * </pre>
       *
       * <code>SEND_DEVICE_COMMAND = 3;</code>
       */
      SEND_DEVICE_COMMAND(3),
      UNRECOGNIZED(-1),
      ;

      /**
       * <pre>
       * Tipo de requisição desconhecido
       * </pre>
       *
       * <code>UNKNOWN_REQUEST = 0;</code>
       */
      public static final int UNKNOWN_REQUEST_VALUE = 0;
      /**
       * <pre>
       * Cliente requisita uma lista de dispositivos conectados 
       * </pre>
       *
       * <code>LIST_DEVICES = 1;</code>
       */
      public static final int LIST_DEVICES_VALUE = 1;
      /**
       * <pre>
       * Cliente requisita o status de um dispositivo específico 
       * </pre>
       *
       * <code>GET_DEVICE_STATUS = 2;</code>
       */
      public static final int GET_DEVICE_STATUS_VALUE = 2;
      /**
       * <pre>
       * Cliente envia um comando para um dispositivo específico 
       * </pre>
       *
       * <code>SEND_DEVICE_COMMAND = 3;</code>
       */
      public static final int SEND_DEVICE_COMMAND_VALUE = 3;


      public final int getNumber() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalArgumentException(
              "Can't get the number of an unknown enum value.");
        }
        return value;
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static RequestType valueOf(int value) {
        return forNumber(value);
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       */
      public static RequestType forNumber(int value) {
        switch (value) {
          case 0: return UNKNOWN_REQUEST;
          case 1: return LIST_DEVICES;
          case 2: return GET_DEVICE_STATUS;
          case 3: return SEND_DEVICE_COMMAND;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<RequestType>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          RequestType> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<RequestType>() {
              public RequestType findValueByNumber(int number) {
                return RequestType.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalStateException(
              "Can't get the descriptor of an unrecognized enum value.");
        }
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return smartcity.SmartCity.ClientRequest.getDescriptor().getEnumTypes().get(0);
      }

      private static final RequestType[] VALUES = values();

      public static RequestType valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        if (desc.getIndex() == -1) {
          return UNRECOGNIZED;
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private RequestType(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:smartcity.ClientRequest.RequestType)
    }

    private int bitField0_;
    public static final int TYPE_FIELD_NUMBER = 1;
    private int type_ = 0;
    /**
     * <code>.smartcity.ClientRequest.RequestType type = 1;</code>
     * @return The enum numeric value on the wire for type.
     */
    @java.lang.Override public int getTypeValue() {
      return type_;
    }
    /**
     * <code>.smartcity.ClientRequest.RequestType type = 1;</code>
     * @return The type.
     */
    @java.lang.Override public smartcity.SmartCity.ClientRequest.RequestType getType() {
      smartcity.SmartCity.ClientRequest.RequestType result = smartcity.SmartCity.ClientRequest.RequestType.forNumber(type_);
      return result == null ? smartcity.SmartCity.ClientRequest.RequestType.UNRECOGNIZED : result;
    }

    public static final int TARGET_DEVICE_ID_FIELD_NUMBER = 2;
    @SuppressWarnings("serial")
    private volatile java.lang.Object targetDeviceId_ = "";
    /**
     * <pre>
     * Necessário para GET_DEVICE_STATUS e SEND_DEVICE_COMMAND
     * </pre>
     *
     * <code>string target_device_id = 2;</code>
     * @return The targetDeviceId.
     */
    @java.lang.Override
    public java.lang.String getTargetDeviceId() {
      java.lang.Object ref = targetDeviceId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        targetDeviceId_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * Necessário para GET_DEVICE_STATUS e SEND_DEVICE_COMMAND
     * </pre>
     *
     * <code>string target_device_id = 2;</code>
     * @return The bytes for targetDeviceId.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getTargetDeviceIdBytes() {
      java.lang.Object ref = targetDeviceId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        targetDeviceId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int COMMAND_FIELD_NUMBER = 3;
    private smartcity.SmartCity.DeviceCommand command_;
    /**
     * <pre>
     * Necessário para SEND_DEVICE_COMMAND
     * </pre>
     *
     * <code>.smartcity.DeviceCommand command = 3;</code>
     * @return Whether the command field is set.
     */
    @java.lang.Override
    public boolean hasCommand() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * Necessário para SEND_DEVICE_COMMAND
     * </pre>
     *
     * <code>.smartcity.DeviceCommand command = 3;</code>
     * @return The command.
     */
    @java.lang.Override
    public smartcity.SmartCity.DeviceCommand getCommand() {
      return command_ == null ? smartcity.SmartCity.DeviceCommand.getDefaultInstance() : command_;
    }
    /**
     * <pre>
     * Necessário para SEND_DEVICE_COMMAND
     * </pre>
     *
     * <code>.smartcity.DeviceCommand command = 3;</code>
     */
    @java.lang.Override
    public smartcity.SmartCity.DeviceCommandOrBuilder getCommandOrBuilder() {
      return command_ == null ? smartcity.SmartCity.DeviceCommand.getDefaultInstance() : command_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (type_ != smartcity.SmartCity.ClientRequest.RequestType.UNKNOWN_REQUEST.getNumber()) {
        output.writeEnum(1, type_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(targetDeviceId_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, targetDeviceId_);
      }
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeMessage(3, getCommand());
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (type_ != smartcity.SmartCity.ClientRequest.RequestType.UNKNOWN_REQUEST.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, type_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(targetDeviceId_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, targetDeviceId_);
      }
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getCommand());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof smartcity.SmartCity.ClientRequest)) {
        return super.equals(obj);
      }
      smartcity.SmartCity.ClientRequest other = (smartcity.SmartCity.ClientRequest) obj;

      if (type_ != other.type_) return false;
      if (!getTargetDeviceId()
          .equals(other.getTargetDeviceId())) return false;
      if (hasCommand() != other.hasCommand()) return false;
      if (hasCommand()) {
        if (!getCommand()
            .equals(other.getCommand())) return false;
      }
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + TYPE_FIELD_NUMBER;
      hash = (53 * hash) + type_;
      hash = (37 * hash) + TARGET_DEVICE_ID_FIELD_NUMBER;
      hash = (53 * hash) + getTargetDeviceId().hashCode();
      if (hasCommand()) {
        hash = (37 * hash) + COMMAND_FIELD_NUMBER;
        hash = (53 * hash) + getCommand().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static smartcity.SmartCity.ClientRequest parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static smartcity.SmartCity.ClientRequest parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static smartcity.SmartCity.ClientRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static smartcity.SmartCity.ClientRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static smartcity.SmartCity.ClientRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static smartcity.SmartCity.ClientRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static smartcity.SmartCity.ClientRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static smartcity.SmartCity.ClientRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static smartcity.SmartCity.ClientRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static smartcity.SmartCity.ClientRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static smartcity.SmartCity.ClientRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static smartcity.SmartCity.ClientRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(smartcity.SmartCity.ClientRequest prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Requisições do Cliente para o Gateway 
     * </pre>
     *
     * Protobuf type {@code smartcity.ClientRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:smartcity.ClientRequest)
        smartcity.SmartCity.ClientRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return smartcity.SmartCity.internal_static_smartcity_ClientRequest_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return smartcity.SmartCity.internal_static_smartcity_ClientRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                smartcity.SmartCity.ClientRequest.class, smartcity.SmartCity.ClientRequest.Builder.class);
      }

      // Construct using smartcity.SmartCity.ClientRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getCommandFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        type_ = 0;
        targetDeviceId_ = "";
        command_ = null;
        if (commandBuilder_ != null) {
          commandBuilder_.dispose();
          commandBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return smartcity.SmartCity.internal_static_smartcity_ClientRequest_descriptor;
      }

      @java.lang.Override
      public smartcity.SmartCity.ClientRequest getDefaultInstanceForType() {
        return smartcity.SmartCity.ClientRequest.getDefaultInstance();
      }

      @java.lang.Override
      public smartcity.SmartCity.ClientRequest build() {
        smartcity.SmartCity.ClientRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public smartcity.SmartCity.ClientRequest buildPartial() {
        smartcity.SmartCity.ClientRequest result = new smartcity.SmartCity.ClientRequest(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(smartcity.SmartCity.ClientRequest result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.type_ = type_;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.targetDeviceId_ = targetDeviceId_;
        }
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.command_ = commandBuilder_ == null
              ? command_
              : commandBuilder_.build();
          to_bitField0_ |= 0x00000001;
        }
        result.bitField0_ |= to_bitField0_;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof smartcity.SmartCity.ClientRequest) {
          return mergeFrom((smartcity.SmartCity.ClientRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(smartcity.SmartCity.ClientRequest other) {
        if (other == smartcity.SmartCity.ClientRequest.getDefaultInstance()) return this;
        if (other.type_ != 0) {
          setTypeValue(other.getTypeValue());
        }
        if (!other.getTargetDeviceId().isEmpty()) {
          targetDeviceId_ = other.targetDeviceId_;
          bitField0_ |= 0x00000002;
          onChanged();
        }
        if (other.hasCommand()) {
          mergeCommand(other.getCommand());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {
                type_ = input.readEnum();
                bitField0_ |= 0x00000001;
                break;
              } // case 8
              case 18: {
                targetDeviceId_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000002;
                break;
              } // case 18
              case 26: {
                input.readMessage(
                    getCommandFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000004;
                break;
              } // case 26
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private int type_ = 0;
      /**
       * <code>.smartcity.ClientRequest.RequestType type = 1;</code>
       * @return The enum numeric value on the wire for type.
       */
      @java.lang.Override public int getTypeValue() {
        return type_;
      }
      /**
       * <code>.smartcity.ClientRequest.RequestType type = 1;</code>
       * @param value The enum numeric value on the wire for type to set.
       * @return This builder for chaining.
       */
      public Builder setTypeValue(int value) {
        type_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <code>.smartcity.ClientRequest.RequestType type = 1;</code>
       * @return The type.
       */
      @java.lang.Override
      public smartcity.SmartCity.ClientRequest.RequestType getType() {
        smartcity.SmartCity.ClientRequest.RequestType result = smartcity.SmartCity.ClientRequest.RequestType.forNumber(type_);
        return result == null ? smartcity.SmartCity.ClientRequest.RequestType.UNRECOGNIZED : result;
      }
      /**
       * <code>.smartcity.ClientRequest.RequestType type = 1;</code>
       * @param value The type to set.
       * @return This builder for chaining.
       */
      public Builder setType(smartcity.SmartCity.ClientRequest.RequestType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        type_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>.smartcity.ClientRequest.RequestType type = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearType() {
        bitField0_ = (bitField0_ & ~0x00000001);
        type_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object targetDeviceId_ = "";
      /**
       * <pre>
       * Necessário para GET_DEVICE_STATUS e SEND_DEVICE_COMMAND
       * </pre>
       *
       * <code>string target_device_id = 2;</code>
       * @return The targetDeviceId.
       */
      public java.lang.String getTargetDeviceId() {
        java.lang.Object ref = targetDeviceId_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          targetDeviceId_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Necessário para GET_DEVICE_STATUS e SEND_DEVICE_COMMAND
       * </pre>
       *
       * <code>string target_device_id = 2;</code>
       * @return The bytes for targetDeviceId.
       */
      public com.google.protobuf.ByteString
          getTargetDeviceIdBytes() {
        java.lang.Object ref = targetDeviceId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          targetDeviceId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Necessário para GET_DEVICE_STATUS e SEND_DEVICE_COMMAND
       * </pre>
       *
       * <code>string target_device_id = 2;</code>
       * @param value The targetDeviceId to set.
       * @return This builder for chaining.
       */
      public Builder setTargetDeviceId(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        targetDeviceId_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Necessário para GET_DEVICE_STATUS e SEND_DEVICE_COMMAND
       * </pre>
       *
       * <code>string target_device_id = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearTargetDeviceId() {
        targetDeviceId_ = getDefaultInstance().getTargetDeviceId();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Necessário para GET_DEVICE_STATUS e SEND_DEVICE_COMMAND
       * </pre>
       *
       * <code>string target_device_id = 2;</code>
       * @param value The bytes for targetDeviceId to set.
       * @return This builder for chaining.
       */
      public Builder setTargetDeviceIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        targetDeviceId_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }

      private smartcity.SmartCity.DeviceCommand command_;
      private com.google.protobuf.SingleFieldBuilderV3<
          smartcity.SmartCity.DeviceCommand, smartcity.SmartCity.DeviceCommand.Builder, smartcity.SmartCity.DeviceCommandOrBuilder> commandBuilder_;
      /**
       * <pre>
       * Necessário para SEND_DEVICE_COMMAND
       * </pre>
       *
       * <code>.smartcity.DeviceCommand command = 3;</code>
       * @return Whether the command field is set.
       */
      public boolean hasCommand() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <pre>
       * Necessário para SEND_DEVICE_COMMAND
       * </pre>
       *
       * <code>.smartcity.DeviceCommand command = 3;</code>
       * @return The command.
       */
      public smartcity.SmartCity.DeviceCommand getCommand() {
        if (commandBuilder_ == null) {
          return command_ == null ? smartcity.SmartCity.DeviceCommand.getDefaultInstance() : command_;
        } else {
          return commandBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Necessário para SEND_DEVICE_COMMAND
       * </pre>
       *
       * <code>.smartcity.DeviceCommand command = 3;</code>
       */
      public Builder setCommand(smartcity.SmartCity.DeviceCommand value) {
        if (commandBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          command_ = value;
        } else {
          commandBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Necessário para SEND_DEVICE_COMMAND
       * </pre>
       *
       * <code>.smartcity.DeviceCommand command = 3;</code>
       */
      public Builder setCommand(
          smartcity.SmartCity.DeviceCommand.Builder builderForValue) {
        if (commandBuilder_ == null) {
          command_ = builderForValue.build();
        } else {
          commandBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Necessário para SEND_DEVICE_COMMAND
       * </pre>
       *
       * <code>.smartcity.DeviceCommand command = 3;</code>
       */
      public Builder mergeCommand(smartcity.SmartCity.DeviceCommand value) {
        if (commandBuilder_ == null) {
          if (((bitField0_ & 0x00000004) != 0) &&
            command_ != null &&
            command_ != smartcity.SmartCity.DeviceCommand.getDefaultInstance()) {
            getCommandBuilder().mergeFrom(value);
          } else {
            command_ = value;
          }
        } else {
          commandBuilder_.mergeFrom(value);
        }
        if (command_ != null) {
          bitField0_ |= 0x00000004;
          onChanged();
        }
        return this;
      }
      /**
       * <pre>
       * Necessário para SEND_DEVICE_COMMAND
       * </pre>
       *
       * <code>.smartcity.DeviceCommand command = 3;</code>
       */
      public Builder clearCommand() {
        bitField0_ = (bitField0_ & ~0x00000004);
        command_ = null;
        if (commandBuilder_ != null) {
          commandBuilder_.dispose();
          commandBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Necessário para SEND_DEVICE_COMMAND
       * </pre>
       *
       * <code>.smartcity.DeviceCommand command = 3;</code>
       */
      public smartcity.SmartCity.DeviceCommand.Builder getCommandBuilder() {
        bitField0_ |= 0x00000004;
        onChanged();
        return getCommandFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Necessário para SEND_DEVICE_COMMAND
       * </pre>
       *
       * <code>.smartcity.DeviceCommand command = 3;</code>
       */
      public smartcity.SmartCity.DeviceCommandOrBuilder getCommandOrBuilder() {
        if (commandBuilder_ != null) {
          return commandBuilder_.getMessageOrBuilder();
        } else {
          return command_ == null ?
              smartcity.SmartCity.DeviceCommand.getDefaultInstance() : command_;
        }
      }
      /**
       * <pre>
       * Necessário para SEND_DEVICE_COMMAND
       * </pre>
       *
       * <code>.smartcity.DeviceCommand command = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          smartcity.SmartCity.DeviceCommand, smartcity.SmartCity.DeviceCommand.Builder, smartcity.SmartCity.DeviceCommandOrBuilder> 
          getCommandFieldBuilder() {
        if (commandBuilder_ == null) {
          commandBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              smartcity.SmartCity.DeviceCommand, smartcity.SmartCity.DeviceCommand.Builder, smartcity.SmartCity.DeviceCommandOrBuilder>(
                  getCommand(),
                  getParentForChildren(),
                  isClean());
          command_ = null;
        }
        return commandBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:smartcity.ClientRequest)
    }

    // @@protoc_insertion_point(class_scope:smartcity.ClientRequest)
    private static final smartcity.SmartCity.ClientRequest DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new smartcity.SmartCity.ClientRequest();
    }

    public static smartcity.SmartCity.ClientRequest getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ClientRequest>
        PARSER = new com.google.protobuf.AbstractParser<ClientRequest>() {
      @java.lang.Override
      public ClientRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<ClientRequest> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ClientRequest> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public smartcity.SmartCity.ClientRequest getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface GatewayResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:smartcity.GatewayResponse)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>.smartcity.GatewayResponse.ResponseType type = 1;</code>
     * @return The enum numeric value on the wire for type.
     */
    int getTypeValue();
    /**
     * <code>.smartcity.GatewayResponse.ResponseType type = 1;</code>
     * @return The type.
     */
    smartcity.SmartCity.GatewayResponse.ResponseType getType();

    /**
     * <pre>
     * Mensagem geral (e.g., descrição de erro, confirmação de sucesso)
     * </pre>
     *
     * <code>string message = 2;</code>
     * @return The message.
     */
    java.lang.String getMessage();
    /**
     * <pre>
     * Mensagem geral (e.g., descrição de erro, confirmação de sucesso)
     * </pre>
     *
     * <code>string message = 2;</code>
     * @return The bytes for message.
     */
    com.google.protobuf.ByteString
        getMessageBytes();

    /**
     * <pre>
     * Para DEVICE_LIST. Contém informações básicas dos dispositivos.
     * </pre>
     *
     * <code>repeated .smartcity.DeviceInfo devices = 3;</code>
     */
    java.util.List<smartcity.SmartCity.DeviceInfo> 
        getDevicesList();
    /**
     * <pre>
     * Para DEVICE_LIST. Contém informações básicas dos dispositivos.
     * </pre>
     *
     * <code>repeated .smartcity.DeviceInfo devices = 3;</code>
     */
    smartcity.SmartCity.DeviceInfo getDevices(int index);
    /**
     * <pre>
     * Para DEVICE_LIST. Contém informações básicas dos dispositivos.
     * </pre>
     *
     * <code>repeated .smartcity.DeviceInfo devices = 3;</code>
     */
    int getDevicesCount();
    /**
     * <pre>
     * Para DEVICE_LIST. Contém informações básicas dos dispositivos.
     * </pre>
     *
     * <code>repeated .smartcity.DeviceInfo devices = 3;</code>
     */
    java.util.List<? extends smartcity.SmartCity.DeviceInfoOrBuilder> 
        getDevicesOrBuilderList();
    /**
     * <pre>
     * Para DEVICE_LIST. Contém informações básicas dos dispositivos.
     * </pre>
     *
     * <code>repeated .smartcity.DeviceInfo devices = 3;</code>
     */
    smartcity.SmartCity.DeviceInfoOrBuilder getDevicesOrBuilder(
        int index);

    /**
     * <pre>
     * Para DEVICE_STATUS_UPDATE. Contém status detalhado.
     * </pre>
     *
     * <code>.smartcity.DeviceUpdate device_status = 4;</code>
     * @return Whether the deviceStatus field is set.
     */
    boolean hasDeviceStatus();
    /**
     * <pre>
     * Para DEVICE_STATUS_UPDATE. Contém status detalhado.
     * </pre>
     *
     * <code>.smartcity.DeviceUpdate device_status = 4;</code>
     * @return The deviceStatus.
     */
    smartcity.SmartCity.DeviceUpdate getDeviceStatus();
    /**
     * <pre>
     * Para DEVICE_STATUS_UPDATE. Contém status detalhado.
     * </pre>
     *
     * <code>.smartcity.DeviceUpdate device_status = 4;</code>
     */
    smartcity.SmartCity.DeviceUpdateOrBuilder getDeviceStatusOrBuilder();

    /**
     * <pre>
     * Para COMMAND_ACK (e.g., "SUCCESS", "FAILED")
     * </pre>
     *
     * <code>string command_status = 5;</code>
     * @return The commandStatus.
     */
    java.lang.String getCommandStatus();
    /**
     * <pre>
     * Para COMMAND_ACK (e.g., "SUCCESS", "FAILED")
     * </pre>
     *
     * <code>string command_status = 5;</code>
     * @return The bytes for commandStatus.
     */
    com.google.protobuf.ByteString
        getCommandStatusBytes();
  }
  /**
   * <pre>
   * Respostas do Gateway para o Cliente 
   * </pre>
   *
   * Protobuf type {@code smartcity.GatewayResponse}
   */
  public static final class GatewayResponse extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:smartcity.GatewayResponse)
      GatewayResponseOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use GatewayResponse.newBuilder() to construct.
    private GatewayResponse(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private GatewayResponse() {
      type_ = 0;
      message_ = "";
      devices_ = java.util.Collections.emptyList();
      commandStatus_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new GatewayResponse();
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return smartcity.SmartCity.internal_static_smartcity_GatewayResponse_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return smartcity.SmartCity.internal_static_smartcity_GatewayResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              smartcity.SmartCity.GatewayResponse.class, smartcity.SmartCity.GatewayResponse.Builder.class);
    }

    /**
     * Protobuf enum {@code smartcity.GatewayResponse.ResponseType}
     */
    public enum ResponseType
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <pre>
       * Tipo de resposta desconhecido
       * </pre>
       *
       * <code>UNKNOWN_RESPONSE = 0;</code>
       */
      UNKNOWN_RESPONSE(0),
      /**
       * <pre>
       * Resposta a LIST_DEVICES
       * </pre>
       *
       * <code>DEVICE_LIST = 1;</code>
       */
      DEVICE_LIST(1),
      /**
       * <pre>
       * Resposta a GET_DEVICE_STATUS
       * </pre>
       *
       * <code>DEVICE_STATUS_UPDATE = 2;</code>
       */
      DEVICE_STATUS_UPDATE(2),
      /**
       * <pre>
       * Confirmação para SEND_DEVICE_COMMAND
       * </pre>
       *
       * <code>COMMAND_ACK = 3;</code>
       */
      COMMAND_ACK(3),
      /**
       * <pre>
       * Resposta de erro geral
       * </pre>
       *
       * <code>ERROR = 4;</code>
       */
      ERROR(4),
      UNRECOGNIZED(-1),
      ;

      /**
       * <pre>
       * Tipo de resposta desconhecido
       * </pre>
       *
       * <code>UNKNOWN_RESPONSE = 0;</code>
       */
      public static final int UNKNOWN_RESPONSE_VALUE = 0;
      /**
       * <pre>
       * Resposta a LIST_DEVICES
       * </pre>
       *
       * <code>DEVICE_LIST = 1;</code>
       */
      public static final int DEVICE_LIST_VALUE = 1;
      /**
       * <pre>
       * Resposta a GET_DEVICE_STATUS
       * </pre>
       *
       * <code>DEVICE_STATUS_UPDATE = 2;</code>
       */
      public static final int DEVICE_STATUS_UPDATE_VALUE = 2;
      /**
       * <pre>
       * Confirmação para SEND_DEVICE_COMMAND
       * </pre>
       *
       * <code>COMMAND_ACK = 3;</code>
       */
      public static final int COMMAND_ACK_VALUE = 3;
      /**
       * <pre>
       * Resposta de erro geral
       * </pre>
       *
       * <code>ERROR = 4;</code>
       */
      public static final int ERROR_VALUE = 4;


      public final int getNumber() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalArgumentException(
              "Can't get the number of an unknown enum value.");
        }
        return value;
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static ResponseType valueOf(int value) {
        return forNumber(value);
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       */
      public static ResponseType forNumber(int value) {
        switch (value) {
          case 0: return UNKNOWN_RESPONSE;
          case 1: return DEVICE_LIST;
          case 2: return DEVICE_STATUS_UPDATE;
          case 3: return COMMAND_ACK;
          case 4: return ERROR;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<ResponseType>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          ResponseType> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<ResponseType>() {
              public ResponseType findValueByNumber(int number) {
                return ResponseType.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalStateException(
              "Can't get the descriptor of an unrecognized enum value.");
        }
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return smartcity.SmartCity.GatewayResponse.getDescriptor().getEnumTypes().get(0);
      }

      private static final ResponseType[] VALUES = values();

      public static ResponseType valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        if (desc.getIndex() == -1) {
          return UNRECOGNIZED;
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private ResponseType(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:smartcity.GatewayResponse.ResponseType)
    }

    private int bitField0_;
    public static final int TYPE_FIELD_NUMBER = 1;
    private int type_ = 0;
    /**
     * <code>.smartcity.GatewayResponse.ResponseType type = 1;</code>
     * @return The enum numeric value on the wire for type.
     */
    @java.lang.Override public int getTypeValue() {
      return type_;
    }
    /**
     * <code>.smartcity.GatewayResponse.ResponseType type = 1;</code>
     * @return The type.
     */
    @java.lang.Override public smartcity.SmartCity.GatewayResponse.ResponseType getType() {
      smartcity.SmartCity.GatewayResponse.ResponseType result = smartcity.SmartCity.GatewayResponse.ResponseType.forNumber(type_);
      return result == null ? smartcity.SmartCity.GatewayResponse.ResponseType.UNRECOGNIZED : result;
    }

    public static final int MESSAGE_FIELD_NUMBER = 2;
    @SuppressWarnings("serial")
    private volatile java.lang.Object message_ = "";
    /**
     * <pre>
     * Mensagem geral (e.g., descrição de erro, confirmação de sucesso)
     * </pre>
     *
     * <code>string message = 2;</code>
     * @return The message.
     */
    @java.lang.Override
    public java.lang.String getMessage() {
      java.lang.Object ref = message_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        message_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * Mensagem geral (e.g., descrição de erro, confirmação de sucesso)
     * </pre>
     *
     * <code>string message = 2;</code>
     * @return The bytes for message.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getMessageBytes() {
      java.lang.Object ref = message_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        message_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int DEVICES_FIELD_NUMBER = 3;
    @SuppressWarnings("serial")
    private java.util.List<smartcity.SmartCity.DeviceInfo> devices_;
    /**
     * <pre>
     * Para DEVICE_LIST. Contém informações básicas dos dispositivos.
     * </pre>
     *
     * <code>repeated .smartcity.DeviceInfo devices = 3;</code>
     */
    @java.lang.Override
    public java.util.List<smartcity.SmartCity.DeviceInfo> getDevicesList() {
      return devices_;
    }
    /**
     * <pre>
     * Para DEVICE_LIST. Contém informações básicas dos dispositivos.
     * </pre>
     *
     * <code>repeated .smartcity.DeviceInfo devices = 3;</code>
     */
    @java.lang.Override
    public java.util.List<? extends smartcity.SmartCity.DeviceInfoOrBuilder> 
        getDevicesOrBuilderList() {
      return devices_;
    }
    /**
     * <pre>
     * Para DEVICE_LIST. Contém informações básicas dos dispositivos.
     * </pre>
     *
     * <code>repeated .smartcity.DeviceInfo devices = 3;</code>
     */
    @java.lang.Override
    public int getDevicesCount() {
      return devices_.size();
    }
    /**
     * <pre>
     * Para DEVICE_LIST. Contém informações básicas dos dispositivos.
     * </pre>
     *
     * <code>repeated .smartcity.DeviceInfo devices = 3;</code>
     */
    @java.lang.Override
    public smartcity.SmartCity.DeviceInfo getDevices(int index) {
      return devices_.get(index);
    }
    /**
     * <pre>
     * Para DEVICE_LIST. Contém informações básicas dos dispositivos.
     * </pre>
     *
     * <code>repeated .smartcity.DeviceInfo devices = 3;</code>
     */
    @java.lang.Override
    public smartcity.SmartCity.DeviceInfoOrBuilder getDevicesOrBuilder(
        int index) {
      return devices_.get(index);
    }

    public static final int DEVICE_STATUS_FIELD_NUMBER = 4;
    private smartcity.SmartCity.DeviceUpdate deviceStatus_;
    /**
     * <pre>
     * Para DEVICE_STATUS_UPDATE. Contém status detalhado.
     * </pre>
     *
     * <code>.smartcity.DeviceUpdate device_status = 4;</code>
     * @return Whether the deviceStatus field is set.
     */
    @java.lang.Override
    public boolean hasDeviceStatus() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * Para DEVICE_STATUS_UPDATE. Contém status detalhado.
     * </pre>
     *
     * <code>.smartcity.DeviceUpdate device_status = 4;</code>
     * @return The deviceStatus.
     */
    @java.lang.Override
    public smartcity.SmartCity.DeviceUpdate getDeviceStatus() {
      return deviceStatus_ == null ? smartcity.SmartCity.DeviceUpdate.getDefaultInstance() : deviceStatus_;
    }
    /**
     * <pre>
     * Para DEVICE_STATUS_UPDATE. Contém status detalhado.
     * </pre>
     *
     * <code>.smartcity.DeviceUpdate device_status = 4;</code>
     */
    @java.lang.Override
    public smartcity.SmartCity.DeviceUpdateOrBuilder getDeviceStatusOrBuilder() {
      return deviceStatus_ == null ? smartcity.SmartCity.DeviceUpdate.getDefaultInstance() : deviceStatus_;
    }

    public static final int COMMAND_STATUS_FIELD_NUMBER = 5;
    @SuppressWarnings("serial")
    private volatile java.lang.Object commandStatus_ = "";
    /**
     * <pre>
     * Para COMMAND_ACK (e.g., "SUCCESS", "FAILED")
     * </pre>
     *
     * <code>string command_status = 5;</code>
     * @return The commandStatus.
     */
    @java.lang.Override
    public java.lang.String getCommandStatus() {
      java.lang.Object ref = commandStatus_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        commandStatus_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * Para COMMAND_ACK (e.g., "SUCCESS", "FAILED")
     * </pre>
     *
     * <code>string command_status = 5;</code>
     * @return The bytes for commandStatus.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getCommandStatusBytes() {
      java.lang.Object ref = commandStatus_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        commandStatus_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (type_ != smartcity.SmartCity.GatewayResponse.ResponseType.UNKNOWN_RESPONSE.getNumber()) {
        output.writeEnum(1, type_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(message_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, message_);
      }
      for (int i = 0; i < devices_.size(); i++) {
        output.writeMessage(3, devices_.get(i));
      }
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeMessage(4, getDeviceStatus());
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(commandStatus_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 5, commandStatus_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (type_ != smartcity.SmartCity.GatewayResponse.ResponseType.UNKNOWN_RESPONSE.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, type_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(message_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, message_);
      }
      for (int i = 0; i < devices_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, devices_.get(i));
      }
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, getDeviceStatus());
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(commandStatus_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(5, commandStatus_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof smartcity.SmartCity.GatewayResponse)) {
        return super.equals(obj);
      }
      smartcity.SmartCity.GatewayResponse other = (smartcity.SmartCity.GatewayResponse) obj;

      if (type_ != other.type_) return false;
      if (!getMessage()
          .equals(other.getMessage())) return false;
      if (!getDevicesList()
          .equals(other.getDevicesList())) return false;
      if (hasDeviceStatus() != other.hasDeviceStatus()) return false;
      if (hasDeviceStatus()) {
        if (!getDeviceStatus()
            .equals(other.getDeviceStatus())) return false;
      }
      if (!getCommandStatus()
          .equals(other.getCommandStatus())) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + TYPE_FIELD_NUMBER;
      hash = (53 * hash) + type_;
      hash = (37 * hash) + MESSAGE_FIELD_NUMBER;
      hash = (53 * hash) + getMessage().hashCode();
      if (getDevicesCount() > 0) {
        hash = (37 * hash) + DEVICES_FIELD_NUMBER;
        hash = (53 * hash) + getDevicesList().hashCode();
      }
      if (hasDeviceStatus()) {
        hash = (37 * hash) + DEVICE_STATUS_FIELD_NUMBER;
        hash = (53 * hash) + getDeviceStatus().hashCode();
      }
      hash = (37 * hash) + COMMAND_STATUS_FIELD_NUMBER;
      hash = (53 * hash) + getCommandStatus().hashCode();
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static smartcity.SmartCity.GatewayResponse parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static smartcity.SmartCity.GatewayResponse parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static smartcity.SmartCity.GatewayResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static smartcity.SmartCity.GatewayResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static smartcity.SmartCity.GatewayResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static smartcity.SmartCity.GatewayResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static smartcity.SmartCity.GatewayResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static smartcity.SmartCity.GatewayResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static smartcity.SmartCity.GatewayResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static smartcity.SmartCity.GatewayResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static smartcity.SmartCity.GatewayResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static smartcity.SmartCity.GatewayResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(smartcity.SmartCity.GatewayResponse prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Respostas do Gateway para o Cliente 
     * </pre>
     *
     * Protobuf type {@code smartcity.GatewayResponse}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:smartcity.GatewayResponse)
        smartcity.SmartCity.GatewayResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return smartcity.SmartCity.internal_static_smartcity_GatewayResponse_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return smartcity.SmartCity.internal_static_smartcity_GatewayResponse_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                smartcity.SmartCity.GatewayResponse.class, smartcity.SmartCity.GatewayResponse.Builder.class);
      }

      // Construct using smartcity.SmartCity.GatewayResponse.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getDevicesFieldBuilder();
          getDeviceStatusFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        type_ = 0;
        message_ = "";
        if (devicesBuilder_ == null) {
          devices_ = java.util.Collections.emptyList();
        } else {
          devices_ = null;
          devicesBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        deviceStatus_ = null;
        if (deviceStatusBuilder_ != null) {
          deviceStatusBuilder_.dispose();
          deviceStatusBuilder_ = null;
        }
        commandStatus_ = "";
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return smartcity.SmartCity.internal_static_smartcity_GatewayResponse_descriptor;
      }

      @java.lang.Override
      public smartcity.SmartCity.GatewayResponse getDefaultInstanceForType() {
        return smartcity.SmartCity.GatewayResponse.getDefaultInstance();
      }

      @java.lang.Override
      public smartcity.SmartCity.GatewayResponse build() {
        smartcity.SmartCity.GatewayResponse result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public smartcity.SmartCity.GatewayResponse buildPartial() {
        smartcity.SmartCity.GatewayResponse result = new smartcity.SmartCity.GatewayResponse(this);
        buildPartialRepeatedFields(result);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartialRepeatedFields(smartcity.SmartCity.GatewayResponse result) {
        if (devicesBuilder_ == null) {
          if (((bitField0_ & 0x00000004) != 0)) {
            devices_ = java.util.Collections.unmodifiableList(devices_);
            bitField0_ = (bitField0_ & ~0x00000004);
          }
          result.devices_ = devices_;
        } else {
          result.devices_ = devicesBuilder_.build();
        }
      }

      private void buildPartial0(smartcity.SmartCity.GatewayResponse result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.type_ = type_;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.message_ = message_;
        }
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000008) != 0)) {
          result.deviceStatus_ = deviceStatusBuilder_ == null
              ? deviceStatus_
              : deviceStatusBuilder_.build();
          to_bitField0_ |= 0x00000001;
        }
        if (((from_bitField0_ & 0x00000010) != 0)) {
          result.commandStatus_ = commandStatus_;
        }
        result.bitField0_ |= to_bitField0_;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof smartcity.SmartCity.GatewayResponse) {
          return mergeFrom((smartcity.SmartCity.GatewayResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(smartcity.SmartCity.GatewayResponse other) {
        if (other == smartcity.SmartCity.GatewayResponse.getDefaultInstance()) return this;
        if (other.type_ != 0) {
          setTypeValue(other.getTypeValue());
        }
        if (!other.getMessage().isEmpty()) {
          message_ = other.message_;
          bitField0_ |= 0x00000002;
          onChanged();
        }
        if (devicesBuilder_ == null) {
          if (!other.devices_.isEmpty()) {
            if (devices_.isEmpty()) {
              devices_ = other.devices_;
              bitField0_ = (bitField0_ & ~0x00000004);
            } else {
              ensureDevicesIsMutable();
              devices_.addAll(other.devices_);
            }
            onChanged();
          }
        } else {
          if (!other.devices_.isEmpty()) {
            if (devicesBuilder_.isEmpty()) {
              devicesBuilder_.dispose();
              devicesBuilder_ = null;
              devices_ = other.devices_;
              bitField0_ = (bitField0_ & ~0x00000004);
              devicesBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getDevicesFieldBuilder() : null;
            } else {
              devicesBuilder_.addAllMessages(other.devices_);
            }
          }
        }
        if (other.hasDeviceStatus()) {
          mergeDeviceStatus(other.getDeviceStatus());
        }
        if (!other.getCommandStatus().isEmpty()) {
          commandStatus_ = other.commandStatus_;
          bitField0_ |= 0x00000010;
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {
                type_ = input.readEnum();
                bitField0_ |= 0x00000001;
                break;
              } // case 8
              case 18: {
                message_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000002;
                break;
              } // case 18
              case 26: {
                smartcity.SmartCity.DeviceInfo m =
                    input.readMessage(
                        smartcity.SmartCity.DeviceInfo.parser(),
                        extensionRegistry);
                if (devicesBuilder_ == null) {
                  ensureDevicesIsMutable();
                  devices_.add(m);
                } else {
                  devicesBuilder_.addMessage(m);
                }
                break;
              } // case 26
              case 34: {
                input.readMessage(
                    getDeviceStatusFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000008;
                break;
              } // case 34
              case 42: {
                commandStatus_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000010;
                break;
              } // case 42
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private int type_ = 0;
      /**
       * <code>.smartcity.GatewayResponse.ResponseType type = 1;</code>
       * @return The enum numeric value on the wire for type.
       */
      @java.lang.Override public int getTypeValue() {
        return type_;
      }
      /**
       * <code>.smartcity.GatewayResponse.ResponseType type = 1;</code>
       * @param value The enum numeric value on the wire for type to set.
       * @return This builder for chaining.
       */
      public Builder setTypeValue(int value) {
        type_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <code>.smartcity.GatewayResponse.ResponseType type = 1;</code>
       * @return The type.
       */
      @java.lang.Override
      public smartcity.SmartCity.GatewayResponse.ResponseType getType() {
        smartcity.SmartCity.GatewayResponse.ResponseType result = smartcity.SmartCity.GatewayResponse.ResponseType.forNumber(type_);
        return result == null ? smartcity.SmartCity.GatewayResponse.ResponseType.UNRECOGNIZED : result;
      }
      /**
       * <code>.smartcity.GatewayResponse.ResponseType type = 1;</code>
       * @param value The type to set.
       * @return This builder for chaining.
       */
      public Builder setType(smartcity.SmartCity.GatewayResponse.ResponseType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        type_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>.smartcity.GatewayResponse.ResponseType type = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearType() {
        bitField0_ = (bitField0_ & ~0x00000001);
        type_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object message_ = "";
      /**
       * <pre>
       * Mensagem geral (e.g., descrição de erro, confirmação de sucesso)
       * </pre>
       *
       * <code>string message = 2;</code>
       * @return The message.
       */
      public java.lang.String getMessage() {
        java.lang.Object ref = message_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          message_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Mensagem geral (e.g., descrição de erro, confirmação de sucesso)
       * </pre>
       *
       * <code>string message = 2;</code>
       * @return The bytes for message.
       */
      public com.google.protobuf.ByteString
          getMessageBytes() {
        java.lang.Object ref = message_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          message_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Mensagem geral (e.g., descrição de erro, confirmação de sucesso)
       * </pre>
       *
       * <code>string message = 2;</code>
       * @param value The message to set.
       * @return This builder for chaining.
       */
      public Builder setMessage(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        message_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Mensagem geral (e.g., descrição de erro, confirmação de sucesso)
       * </pre>
       *
       * <code>string message = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearMessage() {
        message_ = getDefaultInstance().getMessage();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Mensagem geral (e.g., descrição de erro, confirmação de sucesso)
       * </pre>
       *
       * <code>string message = 2;</code>
       * @param value The bytes for message to set.
       * @return This builder for chaining.
       */
      public Builder setMessageBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        message_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }

      private java.util.List<smartcity.SmartCity.DeviceInfo> devices_ =
        java.util.Collections.emptyList();
      private void ensureDevicesIsMutable() {
        if (!((bitField0_ & 0x00000004) != 0)) {
          devices_ = new java.util.ArrayList<smartcity.SmartCity.DeviceInfo>(devices_);
          bitField0_ |= 0x00000004;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          smartcity.SmartCity.DeviceInfo, smartcity.SmartCity.DeviceInfo.Builder, smartcity.SmartCity.DeviceInfoOrBuilder> devicesBuilder_;

      /**
       * <pre>
       * Para DEVICE_LIST. Contém informações básicas dos dispositivos.
       * </pre>
       *
       * <code>repeated .smartcity.DeviceInfo devices = 3;</code>
       */
      public java.util.List<smartcity.SmartCity.DeviceInfo> getDevicesList() {
        if (devicesBuilder_ == null) {
          return java.util.Collections.unmodifiableList(devices_);
        } else {
          return devicesBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * Para DEVICE_LIST. Contém informações básicas dos dispositivos.
       * </pre>
       *
       * <code>repeated .smartcity.DeviceInfo devices = 3;</code>
       */
      public int getDevicesCount() {
        if (devicesBuilder_ == null) {
          return devices_.size();
        } else {
          return devicesBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * Para DEVICE_LIST. Contém informações básicas dos dispositivos.
       * </pre>
       *
       * <code>repeated .smartcity.DeviceInfo devices = 3;</code>
       */
      public smartcity.SmartCity.DeviceInfo getDevices(int index) {
        if (devicesBuilder_ == null) {
          return devices_.get(index);
        } else {
          return devicesBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * Para DEVICE_LIST. Contém informações básicas dos dispositivos.
       * </pre>
       *
       * <code>repeated .smartcity.DeviceInfo devices = 3;</code>
       */
      public Builder setDevices(
          int index, smartcity.SmartCity.DeviceInfo value) {
        if (devicesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDevicesIsMutable();
          devices_.set(index, value);
          onChanged();
        } else {
          devicesBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * Para DEVICE_LIST. Contém informações básicas dos dispositivos.
       * </pre>
       *
       * <code>repeated .smartcity.DeviceInfo devices = 3;</code>
       */
      public Builder setDevices(
          int index, smartcity.SmartCity.DeviceInfo.Builder builderForValue) {
        if (devicesBuilder_ == null) {
          ensureDevicesIsMutable();
          devices_.set(index, builderForValue.build());
          onChanged();
        } else {
          devicesBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Para DEVICE_LIST. Contém informações básicas dos dispositivos.
       * </pre>
       *
       * <code>repeated .smartcity.DeviceInfo devices = 3;</code>
       */
      public Builder addDevices(smartcity.SmartCity.DeviceInfo value) {
        if (devicesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDevicesIsMutable();
          devices_.add(value);
          onChanged();
        } else {
          devicesBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * Para DEVICE_LIST. Contém informações básicas dos dispositivos.
       * </pre>
       *
       * <code>repeated .smartcity.DeviceInfo devices = 3;</code>
       */
      public Builder addDevices(
          int index, smartcity.SmartCity.DeviceInfo value) {
        if (devicesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDevicesIsMutable();
          devices_.add(index, value);
          onChanged();
        } else {
          devicesBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * Para DEVICE_LIST. Contém informações básicas dos dispositivos.
       * </pre>
       *
       * <code>repeated .smartcity.DeviceInfo devices = 3;</code>
       */
      public Builder addDevices(
          smartcity.SmartCity.DeviceInfo.Builder builderForValue) {
        if (devicesBuilder_ == null) {
          ensureDevicesIsMutable();
          devices_.add(builderForValue.build());
          onChanged();
        } else {
          devicesBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Para DEVICE_LIST. Contém informações básicas dos dispositivos.
       * </pre>
       *
       * <code>repeated .smartcity.DeviceInfo devices = 3;</code>
       */
      public Builder addDevices(
          int index, smartcity.SmartCity.DeviceInfo.Builder builderForValue) {
        if (devicesBuilder_ == null) {
          ensureDevicesIsMutable();
          devices_.add(index, builderForValue.build());
          onChanged();
        } else {
          devicesBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Para DEVICE_LIST. Contém informações básicas dos dispositivos.
       * </pre>
       *
       * <code>repeated .smartcity.DeviceInfo devices = 3;</code>
       */
      public Builder addAllDevices(
          java.lang.Iterable<? extends smartcity.SmartCity.DeviceInfo> values) {
        if (devicesBuilder_ == null) {
          ensureDevicesIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, devices_);
          onChanged();
        } else {
          devicesBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * Para DEVICE_LIST. Contém informações básicas dos dispositivos.
       * </pre>
       *
       * <code>repeated .smartcity.DeviceInfo devices = 3;</code>
       */
      public Builder clearDevices() {
        if (devicesBuilder_ == null) {
          devices_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
          onChanged();
        } else {
          devicesBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * Para DEVICE_LIST. Contém informações básicas dos dispositivos.
       * </pre>
       *
       * <code>repeated .smartcity.DeviceInfo devices = 3;</code>
       */
      public Builder removeDevices(int index) {
        if (devicesBuilder_ == null) {
          ensureDevicesIsMutable();
          devices_.remove(index);
          onChanged();
        } else {
          devicesBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * Para DEVICE_LIST. Contém informações básicas dos dispositivos.
       * </pre>
       *
       * <code>repeated .smartcity.DeviceInfo devices = 3;</code>
       */
      public smartcity.SmartCity.DeviceInfo.Builder getDevicesBuilder(
          int index) {
        return getDevicesFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * Para DEVICE_LIST. Contém informações básicas dos dispositivos.
       * </pre>
       *
       * <code>repeated .smartcity.DeviceInfo devices = 3;</code>
       */
      public smartcity.SmartCity.DeviceInfoOrBuilder getDevicesOrBuilder(
          int index) {
        if (devicesBuilder_ == null) {
          return devices_.get(index);  } else {
          return devicesBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * Para DEVICE_LIST. Contém informações básicas dos dispositivos.
       * </pre>
       *
       * <code>repeated .smartcity.DeviceInfo devices = 3;</code>
       */
      public java.util.List<? extends smartcity.SmartCity.DeviceInfoOrBuilder> 
           getDevicesOrBuilderList() {
        if (devicesBuilder_ != null) {
          return devicesBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(devices_);
        }
      }
      /**
       * <pre>
       * Para DEVICE_LIST. Contém informações básicas dos dispositivos.
       * </pre>
       *
       * <code>repeated .smartcity.DeviceInfo devices = 3;</code>
       */
      public smartcity.SmartCity.DeviceInfo.Builder addDevicesBuilder() {
        return getDevicesFieldBuilder().addBuilder(
            smartcity.SmartCity.DeviceInfo.getDefaultInstance());
      }
      /**
       * <pre>
       * Para DEVICE_LIST. Contém informações básicas dos dispositivos.
       * </pre>
       *
       * <code>repeated .smartcity.DeviceInfo devices = 3;</code>
       */
      public smartcity.SmartCity.DeviceInfo.Builder addDevicesBuilder(
          int index) {
        return getDevicesFieldBuilder().addBuilder(
            index, smartcity.SmartCity.DeviceInfo.getDefaultInstance());
      }
      /**
       * <pre>
       * Para DEVICE_LIST. Contém informações básicas dos dispositivos.
       * </pre>
       *
       * <code>repeated .smartcity.DeviceInfo devices = 3;</code>
       */
      public java.util.List<smartcity.SmartCity.DeviceInfo.Builder> 
           getDevicesBuilderList() {
        return getDevicesFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          smartcity.SmartCity.DeviceInfo, smartcity.SmartCity.DeviceInfo.Builder, smartcity.SmartCity.DeviceInfoOrBuilder> 
          getDevicesFieldBuilder() {
        if (devicesBuilder_ == null) {
          devicesBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              smartcity.SmartCity.DeviceInfo, smartcity.SmartCity.DeviceInfo.Builder, smartcity.SmartCity.DeviceInfoOrBuilder>(
                  devices_,
                  ((bitField0_ & 0x00000004) != 0),
                  getParentForChildren(),
                  isClean());
          devices_ = null;
        }
        return devicesBuilder_;
      }

      private smartcity.SmartCity.DeviceUpdate deviceStatus_;
      private com.google.protobuf.SingleFieldBuilderV3<
          smartcity.SmartCity.DeviceUpdate, smartcity.SmartCity.DeviceUpdate.Builder, smartcity.SmartCity.DeviceUpdateOrBuilder> deviceStatusBuilder_;
      /**
       * <pre>
       * Para DEVICE_STATUS_UPDATE. Contém status detalhado.
       * </pre>
       *
       * <code>.smartcity.DeviceUpdate device_status = 4;</code>
       * @return Whether the deviceStatus field is set.
       */
      public boolean hasDeviceStatus() {
        return ((bitField0_ & 0x00000008) != 0);
      }
      /**
       * <pre>
       * Para DEVICE_STATUS_UPDATE. Contém status detalhado.
       * </pre>
       *
       * <code>.smartcity.DeviceUpdate device_status = 4;</code>
       * @return The deviceStatus.
       */
      public smartcity.SmartCity.DeviceUpdate getDeviceStatus() {
        if (deviceStatusBuilder_ == null) {
          return deviceStatus_ == null ? smartcity.SmartCity.DeviceUpdate.getDefaultInstance() : deviceStatus_;
        } else {
          return deviceStatusBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Para DEVICE_STATUS_UPDATE. Contém status detalhado.
       * </pre>
       *
       * <code>.smartcity.DeviceUpdate device_status = 4;</code>
       */
      public Builder setDeviceStatus(smartcity.SmartCity.DeviceUpdate value) {
        if (deviceStatusBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          deviceStatus_ = value;
        } else {
          deviceStatusBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000008;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Para DEVICE_STATUS_UPDATE. Contém status detalhado.
       * </pre>
       *
       * <code>.smartcity.DeviceUpdate device_status = 4;</code>
       */
      public Builder setDeviceStatus(
          smartcity.SmartCity.DeviceUpdate.Builder builderForValue) {
        if (deviceStatusBuilder_ == null) {
          deviceStatus_ = builderForValue.build();
        } else {
          deviceStatusBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000008;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Para DEVICE_STATUS_UPDATE. Contém status detalhado.
       * </pre>
       *
       * <code>.smartcity.DeviceUpdate device_status = 4;</code>
       */
      public Builder mergeDeviceStatus(smartcity.SmartCity.DeviceUpdate value) {
        if (deviceStatusBuilder_ == null) {
          if (((bitField0_ & 0x00000008) != 0) &&
            deviceStatus_ != null &&
            deviceStatus_ != smartcity.SmartCity.DeviceUpdate.getDefaultInstance()) {
            getDeviceStatusBuilder().mergeFrom(value);
          } else {
            deviceStatus_ = value;
          }
        } else {
          deviceStatusBuilder_.mergeFrom(value);
        }
        if (deviceStatus_ != null) {
          bitField0_ |= 0x00000008;
          onChanged();
        }
        return this;
      }
      /**
       * <pre>
       * Para DEVICE_STATUS_UPDATE. Contém status detalhado.
       * </pre>
       *
       * <code>.smartcity.DeviceUpdate device_status = 4;</code>
       */
      public Builder clearDeviceStatus() {
        bitField0_ = (bitField0_ & ~0x00000008);
        deviceStatus_ = null;
        if (deviceStatusBuilder_ != null) {
          deviceStatusBuilder_.dispose();
          deviceStatusBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Para DEVICE_STATUS_UPDATE. Contém status detalhado.
       * </pre>
       *
       * <code>.smartcity.DeviceUpdate device_status = 4;</code>
       */
      public smartcity.SmartCity.DeviceUpdate.Builder getDeviceStatusBuilder() {
        bitField0_ |= 0x00000008;
        onChanged();
        return getDeviceStatusFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Para DEVICE_STATUS_UPDATE. Contém status detalhado.
       * </pre>
       *
       * <code>.smartcity.DeviceUpdate device_status = 4;</code>
       */
      public smartcity.SmartCity.DeviceUpdateOrBuilder getDeviceStatusOrBuilder() {
        if (deviceStatusBuilder_ != null) {
          return deviceStatusBuilder_.getMessageOrBuilder();
        } else {
          return deviceStatus_ == null ?
              smartcity.SmartCity.DeviceUpdate.getDefaultInstance() : deviceStatus_;
        }
      }
      /**
       * <pre>
       * Para DEVICE_STATUS_UPDATE. Contém status detalhado.
       * </pre>
       *
       * <code>.smartcity.DeviceUpdate device_status = 4;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          smartcity.SmartCity.DeviceUpdate, smartcity.SmartCity.DeviceUpdate.Builder, smartcity.SmartCity.DeviceUpdateOrBuilder> 
          getDeviceStatusFieldBuilder() {
        if (deviceStatusBuilder_ == null) {
          deviceStatusBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              smartcity.SmartCity.DeviceUpdate, smartcity.SmartCity.DeviceUpdate.Builder, smartcity.SmartCity.DeviceUpdateOrBuilder>(
                  getDeviceStatus(),
                  getParentForChildren(),
                  isClean());
          deviceStatus_ = null;
        }
        return deviceStatusBuilder_;
      }

      private java.lang.Object commandStatus_ = "";
      /**
       * <pre>
       * Para COMMAND_ACK (e.g., "SUCCESS", "FAILED")
       * </pre>
       *
       * <code>string command_status = 5;</code>
       * @return The commandStatus.
       */
      public java.lang.String getCommandStatus() {
        java.lang.Object ref = commandStatus_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          commandStatus_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Para COMMAND_ACK (e.g., "SUCCESS", "FAILED")
       * </pre>
       *
       * <code>string command_status = 5;</code>
       * @return The bytes for commandStatus.
       */
      public com.google.protobuf.ByteString
          getCommandStatusBytes() {
        java.lang.Object ref = commandStatus_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          commandStatus_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Para COMMAND_ACK (e.g., "SUCCESS", "FAILED")
       * </pre>
       *
       * <code>string command_status = 5;</code>
       * @param value The commandStatus to set.
       * @return This builder for chaining.
       */
      public Builder setCommandStatus(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        commandStatus_ = value;
        bitField0_ |= 0x00000010;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Para COMMAND_ACK (e.g., "SUCCESS", "FAILED")
       * </pre>
       *
       * <code>string command_status = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearCommandStatus() {
        commandStatus_ = getDefaultInstance().getCommandStatus();
        bitField0_ = (bitField0_ & ~0x00000010);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Para COMMAND_ACK (e.g., "SUCCESS", "FAILED")
       * </pre>
       *
       * <code>string command_status = 5;</code>
       * @param value The bytes for commandStatus to set.
       * @return This builder for chaining.
       */
      public Builder setCommandStatusBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        commandStatus_ = value;
        bitField0_ |= 0x00000010;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:smartcity.GatewayResponse)
    }

    // @@protoc_insertion_point(class_scope:smartcity.GatewayResponse)
    private static final smartcity.SmartCity.GatewayResponse DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new smartcity.SmartCity.GatewayResponse();
    }

    public static smartcity.SmartCity.GatewayResponse getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<GatewayResponse>
        PARSER = new com.google.protobuf.AbstractParser<GatewayResponse>() {
      @java.lang.Override
      public GatewayResponse parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<GatewayResponse> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<GatewayResponse> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public smartcity.SmartCity.GatewayResponse getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_smartcity_DiscoveryRequest_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_smartcity_DiscoveryRequest_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_smartcity_DeviceInfo_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_smartcity_DeviceInfo_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_smartcity_DeviceUpdate_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_smartcity_DeviceUpdate_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_smartcity_DeviceCommand_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_smartcity_DeviceCommand_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_smartcity_ClientRequest_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_smartcity_ClientRequest_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_smartcity_GatewayResponse_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_smartcity_GatewayResponse_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\020smart_city.proto\022\tsmartcity\"Z\n\020Discove" +
      "ryRequest\022\022\n\ngateway_ip\030\001 \001(\t\022\030\n\020gateway" +
      "_tcp_port\030\002 \001(\005\022\030\n\020gateway_udp_port\030\003 \001(" +
      "\005\"\276\001\n\nDeviceInfo\022\021\n\tdevice_id\030\001 \001(\t\022#\n\004t" +
      "ype\030\002 \001(\0162\025.smartcity.DeviceType\022\022\n\nip_a" +
      "ddress\030\003 \001(\t\022\014\n\004port\030\004 \001(\005\022.\n\rinitial_st" +
      "ate\030\005 \001(\0162\027.smartcity.DeviceStatus\022\023\n\013is" +
      "_actuator\030\006 \001(\010\022\021\n\tis_sensor\030\007 \001(\010\"\313\001\n\014D" +
      "eviceUpdate\022\021\n\tdevice_id\030\001 \001(\t\022#\n\004type\030\002" +
      " \001(\0162\025.smartcity.DeviceType\022/\n\016current_s" +
      "tatus\030\003 \001(\0162\027.smartcity.DeviceStatus\022\031\n\021" +
      "temperature_value\030\004 \001(\001\022\031\n\021air_quality_i" +
      "ndex\030\005 \001(\001\022\034\n\024custom_config_status\030\006 \001(\t" +
      "\"t\n\rDeviceCommand\022\021\n\tdevice_id\030\001 \001(\t\022#\n\004" +
      "type\030\002 \001(\0162\025.smartcity.DeviceType\022\024\n\014com" +
      "mand_type\030\003 \001(\t\022\025\n\rcommand_value\030\004 \001(\t\"\356" +
      "\001\n\rClientRequest\0222\n\004type\030\001 \001(\0162$.smartci" +
      "ty.ClientRequest.RequestType\022\030\n\020target_d" +
      "evice_id\030\002 \001(\t\022)\n\007command\030\003 \001(\0132\030.smartc" +
      "ity.DeviceCommand\"d\n\013RequestType\022\023\n\017UNKN" +
      "OWN_REQUEST\020\000\022\020\n\014LIST_DEVICES\020\001\022\025\n\021GET_D" +
      "EVICE_STATUS\020\002\022\027\n\023SEND_DEVICE_COMMAND\020\003\"" +
      "\266\002\n\017GatewayResponse\0225\n\004type\030\001 \001(\0162\'.smar" +
      "tcity.GatewayResponse.ResponseType\022\017\n\007me" +
      "ssage\030\002 \001(\t\022&\n\007devices\030\003 \003(\0132\025.smartcity" +
      ".DeviceInfo\022.\n\rdevice_status\030\004 \001(\0132\027.sma" +
      "rtcity.DeviceUpdate\022\026\n\016command_status\030\005 " +
      "\001(\t\"k\n\014ResponseType\022\024\n\020UNKNOWN_RESPONSE\020" +
      "\000\022\017\n\013DEVICE_LIST\020\001\022\030\n\024DEVICE_STATUS_UPDA" +
      "TE\020\002\022\017\n\013COMMAND_ACK\020\003\022\t\n\005ERROR\020\004*y\n\nDevi" +
      "ceType\022\022\n\016UNKNOWN_DEVICE\020\000\022\n\n\006CAMERA\020\001\022\010" +
      "\n\004POST\020\002\022\021\n\rTRAFFIC_LIGHT\020\003\022\026\n\022AIR_QUALI" +
      "TY_SENSOR\020\004\022\026\n\022TEMPERATURE_SENSOR\020\005*h\n\014D" +
      "eviceStatus\022\022\n\016UNKNOWN_STATUS\020\000\022\006\n\002ON\020\001\022" +
      "\007\n\003OFF\020\002\022\010\n\004IDLE\020\003\022\n\n\006ACTIVE\020\004\022\t\n\005ERROR\020" +
      "\005\022\007\n\003RED\020\006\022\t\n\005GREEN\020\007B\017Z\r./smartcitypbb\006" +
      "proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        });
    internal_static_smartcity_DiscoveryRequest_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_smartcity_DiscoveryRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_smartcity_DiscoveryRequest_descriptor,
        new java.lang.String[] { "GatewayIp", "GatewayTcpPort", "GatewayUdpPort", });
    internal_static_smartcity_DeviceInfo_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_smartcity_DeviceInfo_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_smartcity_DeviceInfo_descriptor,
        new java.lang.String[] { "DeviceId", "Type", "IpAddress", "Port", "InitialState", "IsActuator", "IsSensor", });
    internal_static_smartcity_DeviceUpdate_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_smartcity_DeviceUpdate_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_smartcity_DeviceUpdate_descriptor,
        new java.lang.String[] { "DeviceId", "Type", "CurrentStatus", "TemperatureValue", "AirQualityIndex", "CustomConfigStatus", });
    internal_static_smartcity_DeviceCommand_descriptor =
      getDescriptor().getMessageTypes().get(3);
    internal_static_smartcity_DeviceCommand_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_smartcity_DeviceCommand_descriptor,
        new java.lang.String[] { "DeviceId", "Type", "CommandType", "CommandValue", });
    internal_static_smartcity_ClientRequest_descriptor =
      getDescriptor().getMessageTypes().get(4);
    internal_static_smartcity_ClientRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_smartcity_ClientRequest_descriptor,
        new java.lang.String[] { "Type", "TargetDeviceId", "Command", });
    internal_static_smartcity_GatewayResponse_descriptor =
      getDescriptor().getMessageTypes().get(5);
    internal_static_smartcity_GatewayResponse_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_smartcity_GatewayResponse_descriptor,
        new java.lang.String[] { "Type", "Message", "Devices", "DeviceStatus", "CommandStatus", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
